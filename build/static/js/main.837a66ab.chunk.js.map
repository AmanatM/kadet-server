{"version":3,"sources":["GlobalStyles.js","services/misc/authHeader.js","services/userService.js","reducers/user.js","components/SideNav/SideNav.js","elements/Card.js","pages/Dashboard/Dashboard.js","services/dispatcherService.js","reducers/notifications.js","pages/Dispatchers/StatusSelect.js","pages/Dispatchers/Loader.js","utils/dateParser.js","pages/Dispatchers/Dispatcher/Loader.js","pages/Dispatchers/Dispatcher/Dispatcher.js","pages/Dispatchers/AddDispatcher/StatusPicker.js","elements/Button.js","pages/Dispatchers/AddDispatcher/PositionPicker.js","pages/Dispatchers/AddDispatcher/AddDispatcher.js","pages/Dispatchers/InnerBar/Filters.js","pages/Dispatchers/InnerBar/Search.js","pages/Dispatchers/InnerBar/Paginator.js","pages/Dispatchers/InnerBar/ShowAmount.js","elements/ButtonModern.js","pages/Dispatchers/InnerBar/InnerBar.js","pages/Dispatchers/Dispatchers.js","services/cardsService.js","pages/Cards/StatusSelect.js","pages/Cards/Loader.js","pages/Cards/ViewCard/CardStyled.js","pages/Cards/ViewCard/ViewCard.js","pages/Cards/ActivateCard/ActivateCardStyled.js","pages/Cards/ActivateCard/ActivateCard.js","pages/Cards/AddCard/AddCard.js","pages/Cards/InnerBar/Filters.js","pages/Cards/InnerBar/Search.js","pages/Cards/InnerBar/Paginator.js","pages/Cards/InnerBar/ShowAmount.js","pages/Cards/InnerBar/InnerBar.js","pages/Cards/Cards.js","services/ordersService.js","pages/Orders/Loader.js","pages/Orders/ViewOrder/ViewOrder.js","pages/Orders/AddOrder/AddOrderStyled.js","pages/Orders/AddOrder/AddOrder.js","pages/Orders/InnerBar/Filters.js","pages/Orders/InnerBar/Search.js","pages/Orders/InnerBar/InnerBar.js","pages/Orders/Orders.js","pages/Profile/Loader.js","pages/Profile/Profile.js","components/TopPanel/TopPanel.js","components/MainFrame/MainFrame.js","pages/Login/LoginPage.js","components/Notifications/Noticiation.js","components/Notifications/Notifications.js","components/PrivateRoute.js","App.js","serviceWorker.js","reducers/dispatchers.js","store.js","index.js","assets/imgs/close_icon.svg","assets/imgs/logo_white.svg","components/TopPanel/avatar.svg","pages/Dispatchers/InnerBar/icons/next.svg","pages/Cards/InnerBar/icons/next.svg","components/SideNav/icons/dispatchers.svg","components/SideNav/icons/settings.svg","components/SideNav/icons/logout.svg","components/SideNav/icons/collapse.svg","components/SideNav/icons/orders.svg","components/SideNav/icons/cards.svg","components/SideNav/icons/dashboard.svg","pages/Dispatchers/Dispatcher/icons/avatar_placeholder.svg","pages/Dispatchers/Dispatcher/icons/email_icon.svg","pages/Dispatchers/Dispatcher/icons/phone_icon.svg","pages/Dispatchers/Dispatcher/icons/clock_icon.svg","pages/Dispatchers/Dispatcher/icons/docs_icon.svg","pages/Dispatchers/AddDispatcher/icons/user.svg","pages/Dispatchers/AddDispatcher/icons/password.svg","pages/Dispatchers/AddDispatcher/icons/email.svg","pages/Dispatchers/AddDispatcher/icons/phone.svg","pages/Dispatchers/AddDispatcher/icons/calendar.svg","pages/Dispatchers/InnerBar/icons/filter.svg","pages/Dispatchers/InnerBar/icons/search.svg","assets/imgs/ok.svg","assets/imgs/error.svg","pages/Cards/InnerBar/icons/filter.svg","pages/Cards/InnerBar/icons/search.svg","pages/Orders/InnerBar/icons/filter.svg","pages/Orders/InnerBar/icons/search.svg","pages/Profile/icons/email.svg","pages/Profile/icons/check.svg","pages/Profile/icons/no.svg","pages/Login/loginBg.jpg","pages/Login/waves.svg","pages/Login/waves2.svg"],"names":["GlobalStyles","createGlobalStyle","authHeader","user","JSON","parse","localStorage","getItem","token","loginUser","credentials","a","axios","post","res","data","getUserData","id","get","headers","logout","window","removeItem","type","reducer","state","action","SideNavSection","styled","nav","Logout","div","Top","Logo","connect","props","history","useHistory","node","useRef","React","useState","collapsed","setCollapsed","innerWidth","screenSize","setScreenSize","mobileView","setMobileView","handleClickOutside","e","console","log","current","contains","target","useEffect","document","addEventListener","removeEventListener","ref","className","to","alt","src","logoIcon","onClick","collapseIcon","dashboardIcon","admin","dipatchers","cards","orders","settings","push","logoutIcon","Card","DashboardStyled","Dashboard","getAllDispatchers","page","limit","postDispatcher","patchDispatcher","patch","getOneDispatcher","notify","notification","Math","floor","random","clearNotifications","newNotifications","filter","item","SelectStyled","ul","Selected","active","setActive","selected","setSelected","openDropDown","valueToShow","options","option","value","map","v","label","onMouseLeave","i","selection","propName","then","heading","time","catch","err","text","select","key","data-value","rowNumbers","Array","keys","Loader","speed","width","height","backgroundColor","foregroundColor","x","y","rx","ry","parseDate","stringDate","date","Date","month","getMonth","getDate","getFullYear","viewBox","cx","cy","r","DispatcherStyled","withRouter","dispatcher","setDispatcher","stopPropagation","avatar_placeholder","name","surname","username","password","position","status","email_icon","email","phone_icon","SIPNumber","clock_icon","jobStartedDate","docs_icon","processedApplications","StatusPickerStyled","Button","button","color","bgColor","PositoinsPickerStyled","AddDispatcherStyled","FormStyled","Form","FieldGroup","InputStyled","Field","SubmitButton","selectedStatus","setSelectedStatus","selectedPosition","setSelectedPosition","loading","setLoading","onOkFunc","closeUserInfo","closeIcon","initialValues","phoneNumber","onSubmit","values","setSubmitting","dataToSend","htmlFor","required","placeholder","userIcon","passwordIcon","emailIcon","phoneIcon","PositionPicker","calendarIcon","PaginatorStyled","setPage","totalPages","disabled","nextIcon","ShowAmountStyled","ShowAmount","onChange","setLimit","ButtonModern","invert","InnerBarStyled","InnerBar","style","marginRight","dispatchers","CardCustom","DispatchersStyled","statusOptions","Dispatchers","useLocation","setTotalPages","setDispathcers","docs","pages","error","useQueryState","minHeight","exact","path","render","match","params","baseUrl","getAllCards","getActiveCards","getInactiveCards","getOneCard","addCard","deleteCard","delete","activateCard","searchByLastName","searchValue","putCard","put","searchByVIN","searchByCardNumber","deactivateCard","cardData","cardStatus","DeleteButton","ViewCardStyled","InactiveCard","ActiveCard","card","setCard","removeCard","cardNumber","clientId","carNumber","vin","carMake","city","taget","href","marginBottom","actionStartDate","dateOfContractWithClient","paid","okIcon","errorIcon","cardCost","marginTop","ServicesId","ActivateCardStyled","Input","TwoInLine","AddCardStyled","SearchStyled","ExtraMenuStyled","ExtraMenu","open","setOpen","searchOption","setSearchOption","Search","menuActive","setMenuActive","preventDefault","onFocus","setSearchValue","searchLoading","searchIcon","setType","CardsStyled","Cards","setCards","setSearchLoading","servicesId","getAllOrders","addOrder","ViewOrder","AddOrderStyled","ClientId","TechnicalAssistanceCardNumber","Location","PointOfDeparture","PointOfDestination","ServiceId","ServicesCostForClient","CountryId","ServicesCostForContractor","ServiceTime","PaymentMethodId","ServiceRating","OperatorComment","ClientReview","max","Orders","setOrders","order","number","client","price","dateCreated","rating","textAlign","ProfileStyled","CardStyled","setUser","userFromLocal","avatarIcon","checkIcon","noIcon","TopPanelStyled","User","Link","userAvatar","MainFrameStyled","MainFrame","component","Profile","LoginPageStyled","loginPageBg","waves","waves2","input","last","login","dispatch","loggedUser","setItem","stringify","loaded","setLoaded","setTimeout","fillData","kadetLogo","aria-label","autoComplete","NotificationStyled","closeNotification","setWidth","timer","closeTimer","clearTimeout","transition","NotificationsStyled","Notifications","notifications","index","Component","rest","authenticated","pathname","from","location","MainPage","initUser","userFromLocalStorage","LoginPage","Boolean","hostname","reduce_all","combineReducers","userReducer","notificationsReducer","dispatcherReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","LogRocket","init","setupLogRocketReact","ReactDOM","getElementById","subscribe","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.837a66ab.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyles = createGlobalStyle`\n  * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n      -webkit-tap-highlight-color: rgba(0,0,0,0);\n  }\n  \n  body {\n    margin: 0;\n    padding: 0;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n      \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace;\n  }\n  input {\n    font-size: inherit;\n  }\n  img {\n    max-width: 100%;\n  }\n  button {\n    border: none;\n    cursor: pointer;\n    outline: none\n  }\n  a {\n    color: inherit;\n    text-decoration: none;\n    cursor: pointer;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`\n\nexport default GlobalStyles","export function authHeader() {\n    // return authorization header with basic auth credentials\n    let user = JSON.parse(localStorage.getItem('user'));\n    if (user) {\n        return { 'Authorization': 'Bearer ' + user.token };\n    } else {\n        return {};\n    }\n}","import axios from 'axios'\nimport {authHeader} from './misc/authHeader'\nconst baseUrl = '/api/login'\n\nexport const loginUser = async (credentials) => {\n    const res = await axios.post(`${baseUrl}/`, credentials)\n    return res.data\n}\n\nexport const getUserData = async (id) => {\n    const res = await axios.get(`/api/users/${id}`, {headers: authHeader()} )\n    return res.data\n}\n\n","import { loginUser } from '../services/userService'\n \nconst reducer = (state = null, action) => {\n    switch(action.type) {\n        case 'LOGIN':\n            return action.data\n\n        case 'LOGOUT':\n            return null\n\n        case 'INITUSER':\n            return action.data\n            \n        case  'UPDATE_USER':\n            return action.data\n\n        default:\n            return state\n        \n    }\n}\n\nexport const login = (credentials) => {\n    return async dispatch => {\n        const loggedUser = await loginUser(credentials)\n\n        window.localStorage.setItem(\n            'user', JSON.stringify(loggedUser)\n        ) \n        dispatch({\n            type: 'LOGIN',\n            data: loggedUser\n        })\n    }\n}\n\nexport const logout = () => {\n    window.localStorage.removeItem('user')\n    return {\n        type: 'LOGOUT'\n    }\n}\n\nexport const initUser = () => {\n    const userFromLocalStorage = window.localStorage.getItem('user')\n\n    if (userFromLocalStorage) {\n        let loggedUser = JSON.parse(userFromLocalStorage)\n        return {\n            type: 'INITUSER',\n            data: loggedUser\n        }\n    }\n\n    return {\n        type: 'INITUSER',\n        data: null\n    }\n}\n\nexport default reducer","import React, { useState, useEffect, useRef } from 'react'\nimport styled from 'styled-components'\nimport { NavLink, Link, useHistory } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { logout } from '../../reducers/user'\n\n// import dealer_centers from './icons/dealer_centers.svg'\n// import contractors from './icons/contractors.svg'\n// import reviews from './icons/reviews.svg'\n// import reports from './icons/reports.svg'\n// import historyIcon from './icons/history.svg'\n\nimport dipatchers from './icons/dispatchers.svg'\nimport settings from './icons/settings.svg'\nimport logoutIcon from './icons/logout.svg'\nimport collapseIcon from './icons/collapse.svg'\nimport orders from './icons/orders.svg'\nimport cards from './icons/cards.svg'\nimport logoIcon from '../../assets/imgs/logo_white.svg'\nimport dashboardIcon from './icons/dashboard.svg'\n\n\n\n\n\nconst SideNavSection = styled.nav`\n    background-color: #2c3e4e;\n    transition: all .2s;\n    height: 100vh;\n    display: inline-block;\n    grid-area: nav;\n    display: flex;\n    flex-direction: column;\n    grid-area: nav;\n    z-index: 99;\n    width: 250px;\n\n\n    &.collapsed:not(.mobile) {\n        width: 60px;\n    }\n\n    ul {\n        \n        \n        li {\n\n            list-style: none;\n            color: white;\n\n            .text {\n                opacity: 1;\n                white-space: nowrap;\n                transition: all .2s;\n            }\n\n            a {\n                display: flex;\n                align-items: center;\n                text-decoration: none;\n                padding: 8px;\n                transition: all .2s;\n                font-weight: bold;\n                font-size: .9em;\n                height: 45px;\n\n\n                &.active {\n                    background-color: #213240;\n                }\n\n                &:hover {\n                    background-color: #213240;\n                }\n\n                img {\n                    width: 35px;\n                    margin-right: 10px;\n                    transition: all .2s;\n                }\n            }\n        }\n\n        &.collapsed:not(.mobile) {\n            li {\n                position: relative;\n\n                a {\n                    display: flex;\n\n\n                    img {\n                        margin-right: 5px;\n                        margin-left: 5px;\n                    }\n                }\n            }\n\n            .text {\n                opacity: 0;\n                position: absolute;\n                left: -120%;\n            }\n        }\n    }\n\n    &.mobile {\n        position: fixed;\n        transform: translateX(-100%);\n\n        &.collapsed {\n            transform: translateX(0);\n        }\n        \n    }\n\n`\n\n\n\nconst Logout = styled.div`\n    margin-top: auto;\n    padding-bottom: 10px;\n    display: flex;\n    padding-left: 10px;\n    transition: all .2s;\n    margin-bottom: 30px;\n\n\n    button {\n        padding: 8px;\n        border: none;\n        background-color: transparent;\n        color: white;\n        font-size: 1em;\n        font-weight: bold;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        img {\n            width: 40px;\n            margin-right: 10px;\n            min-width: 40px;\n        }\n\n        .text {\n            transition: all .2s;\n            opacity: 1;\n        }\n    }\n\n    &.collapsed:not(.mobile) {\n\n        padding-left: 0;\n        button {\n\n            img {\n                margin: 0;\n            }\n            \n            .text {\n                opacity: 0;\n            }\n        }\n    }\n`\n\nconst Top = styled.div`\n    display: flex;\n    background-color: #1e2d3a;\n    align-items: center;\n    height: 60px;\n\n    a {\n        margin-right: auto;\n    }\n\n    img.collapse {\n        cursor: pointer;\n        width: 35px;\n        margin-right: 15px;\n        transform: rotate(180deg);\n        transition: all .2s;        \n    \n        &.true {\n            transform: rotate(0);\n        }\n    }\n\n    &.mobile {\n        img.collapse {\n        transform: rotate(0);\n        \n        &.true {\n            transform: rotate(180deg);\n        }\n    }\n    }\n\n    &.collapsed {\n        flex-direction: column;\n\n        a {\n            order: 2;\n        }\n\n        img.collapse {\n\n            margin-right: 0;\n            margin-top: 17px;\n        }\n\n        &.mobile {\n            img.collapse {\n                margin-right: 0;\n                margin-top: 0;\n            }\n        }\n    }\n\n    &.mobile {\n        img.collapse {\n            position: fixed;\n            top: 30px;\n            right: -70px;\n            background-color: #2c3e4e;\n            border-radius: 10px;\n            padding: 10px;\n            width: 45px;\n        }\n    }\n`\n\nconst Logo = styled.div`\n\n    padding: 10px;\n    background-color: #1e2d3a;\n    margin-right: auto;\n    width: 60px;\n    transition: all .2s;\n    opacity: 1;\n\n    img {\n        width: 100%;\n    }\n\n    &.collapsed {\n        opacity: 0;\n        transition: none;\n\n        &.mobile {\n            opacity: 1;\n            margin-top: 6px;\n        }\n    }\n`\n\n\nconst SideNav = (props) => {\n\n    let history = useHistory()\n    \n    const logOut = () => {\n        props.logout()\n        history.push(\"/login\")\n    }\n\n    const node = useRef()\n\n    const [ collapsed, setCollapsed ] = React.useState(false)\n    const [ screenSize, setScreenSize ] = React.useState(window.innerWidth)\n    const [ mobileView, setMobileView ] = React.useState(screenSize < 1000)\n\n    const handleClickOutside = e => {\n        console.log(\"clicking anywhere\")\n        if (node.current.contains(e.target)) {\n          // inside click\n          return\n        }\n        // outside click\n        setCollapsed(false)\n    }\n\n    useEffect(() => {\n        if(screenSize < 1000) {\n            setMobileView(true)\n        } else {\n            setMobileView(false)\n        }\n    }, [screenSize])\n\n    useEffect(() => {\n        if (collapsed && screenSize < 1000) {\n          document.addEventListener(\"mousedown\", handleClickOutside)\n        } else {\n          document.removeEventListener(\"mousedown\", handleClickOutside)\n        }\n    \n        return () => {\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n        }\n      }, [collapsed])\n\n\n    useEffect(() => {\n\n        window.addEventListener('resize', () =>  setScreenSize(window.innerWidth));\n\n        return () => {\n            window.removeEventListener('resize', () =>  setScreenSize(window.innerWidth))\n        }\n      }, [])\n\n\n    return (\n        <SideNavSection  ref={node} className={`${collapsed ? 'collapsed' : ''} ${mobileView ? 'mobile' : ''}`}>\n            <Top className={`${collapsed ? 'collapsed' : ''} ${mobileView ? 'mobile' : ''}`}><Link to=\"/\"><Logo className={`${collapsed ? 'collapsed' : ''} ${mobileView ? 'mobile' : ''}`}><img alt=\"Логотип\" src={logoIcon}/></Logo></Link> <img onClick={() => setCollapsed(!collapsed)} className={`collapse ${collapsed}`} alt=\"Закрыть меню\" src={collapseIcon}/></Top>\n            <ul className={`${collapsed ? 'collapsed' : ''} ${mobileView ? 'mobile' : ''}`}>\n                {/* <li><NavLink to='/panel/dealer_centers'><img alt=' Дилерские центры' src={dealer_centers}/><span className=\"text\">Дилерские центры</span></NavLink></li> */}\n                <li><NavLink to='/panel/dashboard'><img alt='Панель' src={dashboardIcon}/><span className=\"text\">Панель</span></NavLink></li>\n                {JSON.parse(window.localStorage.getItem('user')).admin ?  (<li><NavLink to='/panel/dispatchers'><img alt='Диспетчеры' src={dipatchers}/><span className=\"text\">Диспетчеры</span></NavLink></li>) : null}\n                \n                <li><NavLink to='/panel/cards'><img alt='Карты' src={cards}/><span className=\"text\">Карты</span></NavLink></li>\n                <li><NavLink to='/panel/orders'><img alt='Заказы' src={orders}/><span className=\"text\">Заказы</span></NavLink></li>\n                <li><NavLink to='/panel/profile'><img alt='Настройки' src={settings}/><span className=\"text\">Аккаунт</span></NavLink></li>\n\n                {/* <li><NavLink to='/panel/contractors'><img alt='Подрятчики' src={contractors}/><span className=\"text\">Подрятчики</span></NavLink></li>\n                <li><NavLink to='/panel/reviews'><img alt='Отзывы' src={reviews}/><span className=\"text\">Отзывы</span></NavLink></li>\n                <li><NavLink to='/panel/reports'><img alt='Отчеты' src={reports}/><span className=\"text\">Отчеты</span></NavLink></li>\n                <li><NavLink to='/panel/history'><img alt='История' src={historyIcon}/><span className=\"text\">История</span></NavLink></li>\n                <li><NavLink to='/panel/settings'><img alt='Настройки' src={settings}/><span className=\"text\">Настройки</span></NavLink></li> */}\n            </ul>\n\n            <Logout className={`${collapsed ? 'collapsed' : ''} ${mobileView ? 'mobile' : ''}`}>\n                <button onClick={logOut}>\n                    <img src={logoutIcon} alt=\"Выйти\"/><span className=\"text\">Выйти</span>\n                </button>\n            </Logout>\n        </SideNavSection>\n    )\n}\n\nexport default connect(null, {logout})(SideNav)","import styled from 'styled-components'\n\nconst Card = styled.div`\n    background-color: white;\n    padding: 20px;\n    box-shadow: 2px 3px 5px 0px rgba(0,0,0,.4);\n    border-radius: 4px;\n`\n\nexport default Card","import React from 'react'\nimport styled from 'styled-components'\nimport Card from '../../elements/Card'\n\nconst DashboardStyled = styled.div`\n\n`\n\nconst Dashboard = () => {\n\n    return (\n        <DashboardStyled>\n            <Card>\n                Dashboard\n            </Card>\n        </DashboardStyled>\n    )\n}\n\nexport default Dashboard","import axios from 'axios'\nimport { authHeader } from './misc/authHeader'\n\nconst baseUrl = '/api/dispatchers'\n \nexport const getAllDispatchers = async (page = 1, limit = 4) => {\n    const res = await axios.get(`${baseUrl}?page=${page}&limit=${limit}`, {headers: authHeader()})\n    return res.data\n}\n\nexport const postDispatcher = async (data) => {\n    const res = await axios.post(`${baseUrl}`, data,  {headers: authHeader()})\n    return res.data\n}\n\nexport const patchDispatcher = async (id, data) => {\n    const res = await axios.patch(`${baseUrl}/${id}`, data, {headers: authHeader()})\n    return res.data\n}\n\nexport const getOneDispatcher = async(id) => {\n    const res = await axios.get(`${baseUrl}/${id}`, {headers: authHeader()})\n    return res.data\n}","// const notificationsMock = [\n//     {\n//         heading: 'Informative',\n//         text: 'Some information',\n//         type: 'info',\n//         time: 1000\n//     },\n//     {\n//         heading: 'Some error',\n//         text: 'An error occured',\n//         type: 'error',\n//         time: 1000\n//     },\n//     {\n//         heading: 'Success',\n//         type: 'success',\n//         time: 1000\n//     },\n\n//     {\n//         heading: 'Success',\n//         type: 'submit',\n//         onOkFunc: func,\n//         time: 1000\n//     },\n// ]\n\nconst reducer = (state = [], action) => {\n    switch(action.type) {\n        case 'NOTIFY':\n            return [...state, action.data]\n        case 'CLEAR':\n            return []\n        case 'CLOSE_NOTIFICATION':\n            let newNotifications = state.filter(item => item.id !== action.data)\n            return newNotifications\n        default:\n            return state\n        \n    }\n}\n\nconst getRandomId = () => {\n    return Math.floor((Math.random() * 99999999))\n}\n\nexport const notify = (notification) => {\n    return {\n        type: 'NOTIFY',\n        data: {...notification, id: getRandomId()}\n        }\n}\n\nexport const clearNotifications = () => {\n    return {\n        type: 'CLEAR'\n    }\n}\n\nexport const closeNotification = (id) => {\n    return {\n        type: 'CLOSE_NOTIFICATION',\n        data: id\n    }\n}\n\n\nexport default reducer","import React, { useState, useRef } from 'react'\nimport styled from 'styled-components'\nimport { patchDispatcher } from '../../services/dispatcherService'\nimport { notify } from '../../reducers/notifications'\nimport { connect } from 'react-redux'\n\n\nconst SelectStyled = styled.ul`\n    position: absolute;\n    background-color: white;\n    box-shadow: 0px 0px 4px 0px rgba(0,0,0,.4);\n    border-radius: 10px;\n    cursor: pointer;\n    top: 0px;\n    left: 0;\n    z-index: 99;\n    width: 100%;\n\n    li {\n        list-style: none;\n        padding: 5px 0;\n        text-align: center;\n\n        &:first-child {\n            border-top-left-radius: 10px;\n            border-top-right-radius: 10px;\n        }\n\n        &:last-child {\n            border-bottom-left-radius: 10px;\n            border-bottom-right-radius: 10px;\n        }\n\n        &:hover {\n            background-color: lightgrey;\n        }\n\n    }\n`\n\nconst Selected = styled.div`\n    cursor: pointer;\n    font-size: .8em;\n    background-color: lightgrey;\n    border-radius: 30px;\n    max-width: 110px;\n    padding: 3px;\n    text-align: center;\n    font-weight: bold;\n    color: white;\n    margin: 0 auto;\n    min-width: 110px;\n\n    &.fired {\n        background-color: #f44336;\n    }\n    &.active {\n        background-color: #4caf50;\n    }\n    &.vocation {\n        background-color: #2196f3;\n    }\n    &.day_off {\n        background-color: #ff9800;\n    }\n`\n\n\nconst StatusSelect = (props) => {\n\n    const [ active, setActive ] = useState(false)\n    const [ selected, setSelected ] = useState(props.selected)\n\n    const node = useRef()\n\n    const handleClickOutside = e => {\n        if (node.current.contains(e.target)) {\n          // inside click\n          return\n        }\n        setActive(false)\n      };\n\n    const openDropDown = (e) => {\n        setActive(!active)\n    }\n\n    React.useEffect(() => {\n        if (active) {\n          document.addEventListener(\"mousedown\", handleClickOutside);\n        } else {\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n        }\n\n        return () => {\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n      }, [active]);\n\n\n      const select = (id, selection) => {\n        const data = [{\n            propName: 'status', value: selection\n        }]\n        setSelected(selection)\n\n        patchDispatcher(id, data)\n        .then((res) => {\n            setSelected(selection)\n            props.notify({\n                heading: 'Статус обновлен',\n                time: 1500,\n                type: 'success'\n            })\n        })\n        .catch(err => {\n            setSelected(props.selected)\n            props.notify({\n                heading: 'Ошибка',\n                text: err,\n                time: 3000,\n                type: 'error'\n            })\n        })\n    }\n\n\n    const valueToShow = props.options.filter(option => option.value === selected)\n\n    return (\n        <>\n            <Selected className={selected} onClick={() => setActive(true)}>{valueToShow.map(v => (v.label))}</Selected>\n            {active ? (\n                <SelectStyled ref={node} onMouseLeave={openDropDown} onClick={(e) => openDropDown(e)}>\n                    {props.options.map((option, i) => (<li onClick={() => select(props.id, option.value)} key={i} data-value={option.value}>{option.label}</li>))}\n                </SelectStyled>\n            ) : null}\n        </>\n    )\n}\n\nexport default connect(null, { notify })(StatusSelect)","import React from 'react'\nimport ContentLoader from 'react-content-loader'\n\n\nconst rowNumbers = [...Array(20).keys()]\n\nconst Loader = props => (\n\n    \n    <ContentLoader \n        speed={2}\n        width=\"100%\"\n        height=\"70vh\"\n        backgroundColor=\"#f3f3f3\"\n        foregroundColor=\"#ecebeb\"\n    >\n\n        {rowNumbers.map(i => (\n            <rect key={i} x=\"0px\" y={`${(i+1) * 45 - 50}px`} rx=\"0\" ry=\"0\" width=\"100%\" height=\"35\" /> \n        ))}\n\n\n\n  </ContentLoader>\n)\n\n\nexport default Loader","export const parseDate = (stringDate) => {\n\n    let date = new Date(stringDate)\n\n    let month = date.getMonth()\n    let day = date.getDate()\n    let year = date.getFullYear()\n\n    return day + '.' + month + '.' + year+''\n}   ","import React from \"react\"\nimport ContentLoader from \"react-content-loader\" \n\nconst Loader = () => (\n    <ContentLoader \n    speed={1}\n    width={600}\n    height=\"100%\"\n    viewBox=\"0 0 600 250\"\n    backgroundColor=\"#f3f3f3\"\n    foregroundColor=\"#d6d6d6\"\n  >\n    <circle cx=\"94\" cy=\"71\" r=\"55\" /> \n    <rect x=\"192\" y=\"69\" rx=\"2\" ry=\"2\" width=\"147\" height=\"12\" /> \n    <rect x=\"188\" y=\"29\" rx=\"2\" ry=\"2\" width=\"302\" height=\"21\" /> \n    <rect x=\"45\" y=\"163\" rx=\"2\" ry=\"2\" width=\"184\" height=\"15\" /> \n    <rect x=\"45\" y=\"197\" rx=\"2\" ry=\"2\" width=\"184\" height=\"15\" /> \n    <rect x=\"292\" y=\"163\" rx=\"2\" ry=\"2\" width=\"184\" height=\"15\" /> \n    <rect x=\"296\" y=\"198\" rx=\"2\" ry=\"2\" width=\"184\" height=\"15\" /> \n    <rect x=\"191\" y=\"99\" rx=\"2\" ry=\"2\" width=\"91\" height=\"20\" />\n  </ContentLoader>\n)\n\nexport default Loader","import React from 'react'\nimport styled from 'styled-components'\nimport { getOneDispatcher } from '../../../services/dispatcherService'\nimport { withRouter } from 'react-router-dom'\nimport StatusSelect from '../StatusSelect'\nimport { parseDate } from '../../../utils/dateParser'\nimport Loader from './Loader'\n\nimport avatar_placeholder from './icons/avatar_placeholder.svg'\nimport email_icon from './icons/email_icon.svg'\nimport phone_icon from './icons/phone_icon.svg'\nimport clock_icon from './icons/clock_icon.svg'\nimport docs_icon from './icons/docs_icon.svg'\n\nconst DispatcherStyled = styled.div`\n    position: fixed;\n    overflow: scroll;\n    top: 0px;\n    width: 500px;\n    height: 40px;\n    left: 0;\n    background: rgba(0, 0, 0, .5);\n    z-index: 999;\n    padding: 20px;\n    height: 100vh;\n    width: 100%;\n    display: flex;\n    z-index: 99;\n\n    .content {\n        background-color: rgb(231, 231, 231);\n        width: 100%;\n        max-width: 650px;\n        margin: auto;\n        border-radius: 10px;\n        transform: translateY(-40px);\n        padding: 20px;\n\n        .top {\n            display: flex;\n            align-items: center;\n            border-bottom: 1px solid grey;\n            padding: 20px;\n            .avatar {\n                margin-right: 40px;\n                img {\n                    max-width: 130px;\n                }\n            }\n            .right {\n                * {\n                    margin: 10px 0;\n                }\n                .select {\n                    width: 130px;\n                    position: relative;\n                }\n            }\n        }\n        .bottom {\n            display: flex;\n            \n            .left {\n                flex: 1 0 50%;\n                padding: 10px; \n                border-right: 1px solid grey;\n                .item {\n                    display: flex; \n                    align-items: center;\n                    margin: 10px 0;\n                    img {\n                        width: 25px;\n                        margin-right: 10px;\n                    }\n                }\n            }\n            .right {\n                flex: 1 0 50%;\n                padding: 10px; \n                .item {\n                    display: flex; \n                    align-items: center;\n                    margin: 10px 0;\n                    img {\n                        width: 25px;\n                        margin-right: 10px;\n                    }\n                }\n            }\n        }\n    }\n`\n\nconst Dispatcher = (props) => {\n\n    const [ dispatcher, setDispatcher ] = React.useState()\n\n    React.useEffect(() => {\n        getOneDispatcher(props.id)\n        .then((res) => {\n            console.log(res)\n            setDispatcher(res)\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n    }, [])\n\n    const statusOptions = [\n        { value: 'fired', label: 'Уволен'},\n        { value: 'day_off', label: 'Выходной'},\n        { value: 'active', label: 'Активный'},\n        { value: 'vocation', label: 'В отпуске'},\n        { value: 'sick_leave', label: 'На больничном'},\n    ]\n\n    const closeUserInfo = (e) => {\n        e.stopPropagation()\n        return props.history.push('/panel/dispatchers')\n    }\n\n    return (\n        <DispatcherStyled onClick={closeUserInfo}>\n            <div className=\"content\" onClick={(e) => e.stopPropagation()}>\n                {dispatcher ? (\n                    <div>\n\n                        <div className=\"top\">\n                            <div className=\"avatar\"><img src={avatar_placeholder}/></div>\n                            <div className=\"right\">\n                                <h3>{dispatcher.name} {dispatcher.surname}</h3>\n                                <p className=\"username\">Username: <i><b>{dispatcher.username}</b></i></p>\n                                <p className=\"username\">Пароль: <i><b>{dispatcher.password}</b></i></p>\n                                <p className=\"position\">Позиция: <b>{dispatcher.position}</b></p>\n                                <div className=\"select\"><StatusSelect id={dispatcher.id} selected={dispatcher.status} options={statusOptions}/></div>\n                            </div>\n                        </div>\n\n                        <div className=\"bottom\">\n                            <div className=\"left\">\n                                <div className=\"item\">\n                                    <img src={email_icon}/><span>{dispatcher.email}</span>\n                                </div>\n                                <div className=\"item\">\n                                    <img src={phone_icon}/><span>{dispatcher.SIPNumber}</span>\n                                </div>\n                            </div>\n                            <div className=\"right\">\n                                <div className=\"item\">\n                                    <img src={clock_icon}/><span>Дата начала работы: <b>{parseDate(dispatcher.jobStartedDate)}</b></span>\n                                </div>\n                                <div className=\"item\">\n                                    <img src={docs_icon}/><span>Заявок обраотанно: <b>{dispatcher.processedApplications}</b></span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                ): <Loader/>}\n            </div>\n        </DispatcherStyled>\n    )\n}\n\nexport default withRouter(Dispatcher)","import React, { useState, useRef } from 'react'\nimport styled from 'styled-components'\nimport { notify } from '../../../reducers/notifications'\nimport { connect } from 'react-redux'\n\n\nconst StatusPickerStyled = styled.ul`\n    position: absolute;\n    background-color: white;\n    box-shadow: 0px 0px 4px 0px rgba(0,0,0,.4);\n    border-radius: 10px;\n    cursor: pointer;\n    top: 0px;\n    left: 0;\n    z-index: 99;\n    width: 100%;\n\n    li {\n        list-style: none;\n        padding: 5px 0;\n        text-align: center;\n\n        &:first-child {\n            border-top-left-radius: 10px;\n            border-top-right-radius: 10px;\n        }\n\n        &:last-child {\n            border-bottom-left-radius: 10px;\n            border-bottom-right-radius: 10px;\n        }\n\n        &:hover {\n            background-color: lightgrey;\n        }\n\n    }\n`\n\nconst Selected = styled.div`\n    cursor: pointer;\n    font-size: .8em;\n    background-color: lightgrey;\n    border-radius: 30px;\n    margin-right: 20px;\n    margin-top: 5px;\n    padding: 3px;\n    text-align: center;\n    font-weight: bold;\n    color: white;\n    min-width: 110px;\n\n    &.fired {\n        background-color: #f44336;\n    }\n    &.active {\n        background-color: #4caf50;\n    }\n    &.vocation {\n        background-color: #2196f3;\n    }\n    &.day_off {\n        background-color: #ff9800;\n    }\n`\n\n\nconst StatusPicker = ({selected, setSelected, options}) => {\n\n    const [ active, setActive ] = useState(false)\n\n    const node = useRef()\n\n    const handleClickOutside = e => {\n        if (node.current.contains(e.target)) {\n          // inside click\n          return\n        }\n        setActive(false)\n      };\n\n    const openDropDown = (e) => {\n        setActive(!active)\n    }\n\n    React.useEffect(() => {\n        if (active) {\n          document.addEventListener(\"mousedown\", handleClickOutside);\n        } else {\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n        }\n\n        return () => {\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n      }, [active]);\n\n\n      const select = (selection) => {\n        setSelected(selection)\n    }\n\n\n    const valueToShow = options.filter(option => option.value === selected)\n\n    return (\n        <>\n            <Selected className={selected} onClick={() => setActive(true)}>{valueToShow.map(v => (v.label))}</Selected>\n            {active ? (\n                <StatusPickerStyled ref={node} onMouseLeave={openDropDown} onClick={(e) => openDropDown(e)}>\n                    {options.map((option, i) => (<li onClick={() => select(option.value)} key={i} data-value={option.value}>{option.label}</li>))}\n                </StatusPickerStyled>\n            ) : null}\n        </>\n    )\n}\n\nexport default connect(null, { notify })(StatusPicker)","import styled from 'styled-components'\n\nconst Button = styled.button`\n    border: none;\n    padding: 10px 20px;\n    border-radius: 20px;\n    font-size: 1em;\n    color: ${props => props.color || \"black\"};;\n    background-color: ${props => props.bgColor || \"white\"};\n    transition: all .2s;\n    box-shadow: 3px 3px 10px 0px rgba(0,0,0,.2);\n\n    &:hover {\n        box-shadow: 6px 9px 7px 0px rgba(0,0,0,.4);\n    }\n`\n\nexport default Button","import React, { useState, useRef } from 'react'\nimport styled from 'styled-components'\nimport { notify } from '../../../reducers/notifications'\nimport { connect } from 'react-redux'\n\n\nconst PositoinsPickerStyled = styled.ul`\n    position: absolute;\n    background-color: white;\n    box-shadow: 0px 0px 4px 0px rgba(0,0,0,.4);\n    border-radius: 10px;\n    cursor: pointer;\n    top: 0px;\n    left: 0;\n    z-index: 99;\n    width: 100%;\n\n    li {\n        list-style: none;\n        padding: 5px 0;\n        text-align: center;\n\n        &:first-child {\n            border-top-left-radius: 10px;\n            border-top-right-radius: 10px;\n        }\n\n        &:last-child {\n            border-bottom-left-radius: 10px;\n            border-bottom-right-radius: 10px;\n        }\n\n        &:hover {\n            background-color: lightgrey;\n        }\n\n    }\n`\n\nconst Selected = styled.div`\n    cursor: pointer;\n    font-size: .8em;\n    background-color: grey;\n    border-radius: 30px;\n    margin-right: 20px;\n    margin-top: 5px;\n    padding: 3px;\n    text-align: center;\n    font-weight: bold;\n    color: white;\n    min-width: 110px;\n\n`\n\n\nconst PositoinsPicker = ({selected, setSelected, options}) => {\n\n    const [ active, setActive ] = useState(false)\n\n    const node = useRef()\n\n    const handleClickOutside = e => {\n        if (node.current.contains(e.target)) {\n          // inside click\n          return\n        }\n        setActive(false)\n      };\n\n    const openDropDown = (e) => {\n        setActive(!active)\n    }\n\n    React.useEffect(() => {\n        if (active) {\n          document.addEventListener(\"mousedown\", handleClickOutside);\n        } else {\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n        }\n\n        return () => {\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n      }, [active]);\n\n\n      const select = (selection) => {\n        setSelected(selection)\n    }\n\n\n    const valueToShow = options.filter(option => option === selected)\n\n    return (\n        <>\n            <Selected className={selected} onClick={() => setActive(true)}>{valueToShow[0]}</Selected>\n            {active ? (\n                <PositoinsPickerStyled ref={node} onMouseLeave={openDropDown} onClick={(e) => openDropDown(e)}>\n                    {options.map((option, i) => (<li onClick={() => select(option)} key={i} data-value={option}>{option}</li>))}\n                </PositoinsPickerStyled>\n            ) : null}\n        </>\n    )\n}\n\nexport default connect(null, { notify })(PositoinsPicker)","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\nimport { withRouter, useHistory } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { notify, clearNotifications } from '../../../reducers/notifications'\nimport { postDispatcher } from '../../../services/dispatcherService'\nimport StatusPicker from './StatusPicker'\nimport Loader from 'react-loader-spinner'\n\n\nimport Button from '../../../elements/Button'\nimport closeIcon from '../../../assets/imgs/close_icon.svg'\nimport userIcon from './icons/user.svg'\nimport passwordIcon from './icons/password.svg'\nimport emailIcon from './icons/email.svg'\nimport phoneIcon from './icons/phone.svg'\nimport calendarIcon from './icons/calendar.svg'\nimport PositionPicker from './PositionPicker'\n\nconst AddDispatcherStyled = styled.div`\n    position: fixed;\n    overflow: scroll;\n    top: 0px;\n    width: 500px;\n    height: 40px;\n    left: 0;\n    background: rgba(0, 0, 0, .5);\n    z-index: 99;\n    padding: 40px 20px;\n    height: 100vh;\n    width: 100%;\n    display: flex;\n\n    div.content {\n        width: 100%;\n        max-width: 650px;\n        margin: auto;\n        padding: 40px 30px;\n        background-color: #e7e7e7;\n        border-radius: 10px;\n        position: relative;\n        padding-top: 70px;\n\n\n        .card_title {\n            background-color: #2c3e4e;\n            padding: 15px;\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            display: flex;\n            align-items: center;\n\n            span {\n                font-weight: bold;\n                color: white;\n                font-size: 1em;\n                margin-right: auto;\n            }\n\n            img {\n                max-width: 40px;\n                width: 25px;\n                cursor: pointer;\n            }\n        }\n    }\n\n`\n\nconst FormStyled = styled(Form)`\n    display: flex;\n    flex-direction: column;\n\n    .form_line {\n\n        h3 {\n            margin-bottom: 20px;\n        }\n\n        &.two_in_one {\n            .form_content {\n                display: flex;\n\n                *:first-child {\n                    flex: 50% 0 0;\n                    margin-right: 20px;\n                }\n\n                *:last-child {\n                    flex: 50% 0 0;\n                    padding-right: 20px;\n                }\n            }   \n        }\n\n        &.full_name {\n            display: flex;\n            justify-content: space-around;\n\n            div:first-child {\n                padding-right: 20px;\n            }\n            div:last-child {\n                padding-left: 20px;\n            }\n        }   \n\n        &.credentials {   \n            \n            .form_content {\n                display: flex;\n\n                *:first-child {\n                    flex: 50% 0 0;\n                    margin-right: 20px;\n                }\n\n                *:last-child {\n                    flex: 50% 0 0;\n                    margin-right: 20px;\n                }\n            }            \n        }  \n\n        &.status_position {\n            margin-bottom: 20px;\n            .form_content {\n                display: flex;\n\n                .status {\n                    flex: 50% 0 0;\n                    margin-right: 20px;\n                    position: relative;\n\n                    label {\n                        margin-bottom: 10px;\n                        font-size: .85em;\n                    }\n                }\n\n                .position {\n                    flex: 50% 0 0;\n                    margin-right: 20px;\n                    position: relative;\n                }\n            }\n        }\n    }\n\n\n\n`\n\nconst FieldGroup = styled.div`\n    position: relative;\n    margin: 20px 0;\n    width: 100%;\n\n    label {\n        position: absolute;\n        top: -20px;\n        font-size: .85em;\n        left: 0;\n    }\n\n    .with_image {\n        position: relative;\n        text-align: center;\n\n        img {\n            max-width: 100%;\n            width: 20px;\n            position: absolute;\n            left: 10px;\n            top: 50%;\n            transform: translateY(-50%);\n        }\n\n        input {\n            padding-left: 40px;\n            width: 100%;\n        }\n    }\n`\n\nconst InputStyled = styled(Field)`\n    border: none;\n    padding: 8px 10px;\n    border-radius: 5px;\n    outline: none;\n    font-size: .95em;\n    width: 100%;\n`\n\nconst SubmitButton = styled(Button)`\n    margin-top: 25px;\n`\n\n\nconst AddDispatcher = (props) => {\n\n\n    const closeUserInfo = (e) => {\n        e.stopPropagation()\n        return props.history.push('/panel/dispatchers')\n    }\n\n    const confirmation = (e) => {\n        props.clearNotifications()\n        props.notify({\n            heading: 'Вы уверены?',\n            text: 'Данные будут сброшены',\n            type: 'submit',\n            onOkFunc: () => closeUserInfo(e)\n        })\n    }\n\n    const [ selectedStatus, setSelectedStatus ] = useState('active')\n    const [ selectedPosition, setSelectedPosition ] = useState('Диспетчер')\n\n    const initialValues = {\n        username: '',\n        name: '',\n        surname: '',\n        SIPNumber: '',\n        phoneNumber: '',\n        email: '',\n        password: '',\n        jobStartedDate: '',\n        processedApplications: ''\n    }\n\n    const [ loading, setLoading ] = useState(false)\n\n    let history = useHistory()\n\n    const onSubmit = (values, { setSubmitting }) => {\n\n        setLoading(true)\n        let dataToSend = {\n            ...values,\n            status: selectedStatus,\n            position: selectedPosition\n        }\n        postDispatcher(dataToSend)\n        .then(res => {\n           console.log(res)\n\n           setLoading(false)\n\n           history.push(`/panel/dispatchers/${res.id}`)\n\n            props.notify({\n                type: 'success',\n                heading: 'Диспетчер добавлен!',\n                time: 2000\n            })\n         })\n         .catch(err => {\n\n            setLoading(false)\n            props.notify({\n                type: 'error',\n                heading: 'Что-то пошло не так!',\n                time: 2000\n            })\n            console.log(err)\n         })\n        \n\n    }\n\n\n    const statusOptions = [\n        { value: 'fired', label: 'Уволен'},\n        { value: 'day_off', label: 'Выходной'},\n        { value: 'active', label: 'Активный'},\n        { value: 'vocation', label: 'В отпуске'},\n        { value: 'sick_leave', label: 'На больничном'},\n    ]\n\n    const positionOptions = ['Диспетчер', 'Старший диспетчер', 'Служба контроля качества', 'Выделенный под проект']\n\n\n\n    return (\n        <AddDispatcherStyled>\n            <div className=\"content\" onClick={(e) => e.stopPropagation()}>\n                <div className=\"card_title\"><span>Добавить нового диспетчера: </span><img onClick={confirmation} src={closeIcon}/></div>\n                <Formik initialValues={initialValues} onSubmit={onSubmit}>\n\n                    <FormStyled>\n\n                        <div className=\"form_line full_name\">\n                            <FieldGroup>\n                                <label htmlFor=\"FirstName\">Имя: </label>\n                                <InputStyled required placeholder=\"Имя\" name=\"name\" type=\"text\" />\n                            </FieldGroup>\n                            <FieldGroup>\n                                <label htmlFor=\"SecondName\">Фамилия: </label>\n                                <InputStyled required placeholder=\"Фамилия\" name=\"surname\" type=\"text\" />\n                            </FieldGroup>\n                        </div>\n\n                        <div className=\"form_line credentials\">\n                            <h3>Данные для входа: </h3>\n\n                            <div className=\"form_content\">\n                                <FieldGroup>\n                                    <label htmlFor=\"Login\">Логин: </label>\n                                    <div className=\"with_image\">\n                                        <img src={userIcon}/>\n                                        <InputStyled required placeholder=\"Логин\" name=\"username\" type=\"text\"/>\n                                    </div>\n                                </FieldGroup>\n                                <FieldGroup>\n                                    <label htmlFor=\"Login\">Пароль: </label>\n                                    <div className=\"with_image\">\n                                        <img src={passwordIcon}/>\n                                        <InputStyled required placeholder=\"Пароль\" name=\"password\" type=\"password\"/>\n                                    </div>\n                                </FieldGroup>\n                            </div>\n  \n                        </div>\n\n                        <FieldGroup>\n                            <label htmlFor=\"Email\">Email: </label>\n                            <div className=\"with_image\">\n                                <img src={emailIcon}/>\n                                <InputStyled required placeholder=\"Email\" name=\"email\" type=\"email\"/>\n                            </div>\n                        </FieldGroup>\n\n\n\n                        <div className=\"form_line two_in_one\">\n                            <div className=\"form_content\">\n\n                                <FieldGroup>\n                                    <label htmlFor=\"PhoneNumber\">Телефон: </label>\n                                    <div className=\"with_image\">\n                                        <img src={phoneIcon}/>\n                                        <InputStyled required placeholder=\"Телефон\" name=\"phoneNumber\" type=\"tel\"/>\n                                    </div>\n                                </FieldGroup>\n\n                                <FieldGroup>\n                                    <label htmlFor=\"PhoneSIPNumber\">SIP Номер: </label>\n                                    <InputStyled required placeholder=\"SIP Номер\" name=\"SIPNumber\" type=\"number\"/>\n                                </FieldGroup>\n                            </div>\n                        </div>\n\n                        <div className=\"form_line status_position\">\n                            <div className=\"form_content\">\n                                <div className=\"status\">\n                                    <label htmlFor=\"MainLanguage\">Статус: </label>\n                                    <StatusPicker selected={selectedStatus} setSelected={setSelectedStatus} options={statusOptions}/>\n                                </div>\n\n                                <div className=\"position\">\n                                    <label htmlFor=\"AnotherLanguage\">Позиция </label>\n                                    <PositionPicker selected={selectedPosition} setSelected={setSelectedPosition} options={positionOptions}/>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"form_line two_in_one\">\n                            <div className=\"form_content\">\n\n                                <FieldGroup>\n                                    <label htmlFor=\"PhoneNumber\">Дата начала работы: </label>\n                                    <div className=\"with_image\">\n                                        <img src={calendarIcon}/>\n                                        <InputStyled required placeholder=\"Дата\" name=\"jobStartedDate\" type=\"date\"/>\n                                    </div>\n                                </FieldGroup>\n\n                                <FieldGroup>\n                                    <label htmlFor=\"PhoneSIPNumber\">Обработранно заявок</label>\n                                    <InputStyled required placeholder=\"Кол-во обработанных заявок\" name=\"processedApplications\" type=\"number\"/>\n                                </FieldGroup>\n                            </div>\n                        </div>\n\n                        <SubmitButton className=\"submit_btn\" type=\"submit\">{loading ? <Loader type=\"Puff\" color=\"#000\" height={15} width={15}/> : \"Добавить\"}</SubmitButton>\n                    </FormStyled>\n                </Formik>\n            </div>\n        </AddDispatcherStyled>\n    )\n}\n\nexport default connect(null, {notify, clearNotifications})(withRouter(AddDispatcher))","import React, { useState, useEffect, useRef } from 'react'\nimport styled from 'styled-components'\nimport { getPositions } from '../../../services/misc/roles'\n\n\nimport filterIcon from './icons/filter.svg'\n\nconst FiltersDtyled = styled.div`\n    flex: 30% 0 0;\n    display: flex;\n    align-items: center;\n\n    .filter-icon {\n      display: flex;\n      justify-content: center;\n      align-content: center;\n      min-width: 20px;\n      width: 18px;\n      margin-right: 15px;\n      img {\n        width: 100%;\n      }\n    }\n\n    .filter_item {\n        display: flex;\n        align-items: center;\n        position: relative;\n        \n        &.status-filter {\n          margin-right: 20px;\n        }\n\n        span.info {\n            font-size: .7em;\n            position: absolute;\n            top: -50%;\n            left: 0;\n            \n        }\n    }\n`\n\nconst DropDownStyled = styled.div`\n  display: flex;\n  position: relative;\n\n  .dropdown-toggler {\n    background-color: #45a9db;\n    padding: 5px;\n    font-size: .9em;\n    border-radius: 5px;\n    color: white;\n    position: relative;\n    z-index: 9;\n    max-height: 27px;\n    height: 27px;\n  }\n\n  .dropdown-menu {\n    position: absolute;\n    left: 0;\n    top: 0;\n    background-color: #607d8b;\n    border-radius: 5px;\n    z-index: 99;\n\n    .dropdown-menu-item {\n      list-style: none;\n      font-size: .9em;\n      text-align: center;\n      padding: 5px 10px;\n      cursor: pointer;\n      color: white;\n    }\n  }\n`\n\n\nconst Dropdown = ({ value, options, onChange }) => {\n\n\n  const node = useRef()\n  const [open, setOpen] = useState(false)\n\n  const handleClickOutside = e => {\n    if (node.current.contains(e.target)) {\n      // inside click\n      return;\n    }\n    // outside click\n    setOpen(false)\n  }\n\n  const handleChange = selectedValue => {\n    onChange(selectedValue)\n    setOpen(false)\n  }\n\n\n  useEffect(() => {\n    if (open) {\n      document.addEventListener(\"mousedown\", handleClickOutside)\n    } else {\n      document.removeEventListener(\"mousedown\", handleClickOutside)\n    }\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    }\n  }, [open])\n\n\n  return (\n    <DropDownStyled ref={node} className=\"dropdown\">\n      <button className=\"dropdown-toggler\" onClick={e => setOpen(!open)}>\n        {value || 'Все'}\n      </button>\n      {open ? (\n        <ul className=\"dropdown-menu\">\n          {options.map(opt => (\n            <li key={opt} className=\"dropdown-menu-item\" onClick={e => handleChange(opt)}>\n              {opt}\n            </li>\n          ))}\n        </ul>\n      ) : null}\n    </DropDownStyled>\n  )\n}\n\nconst Filters = () => {\n\n    const [ statusFilter, setStatusFilter ] = useState('Любой')\n    const [ positionFilter, setPositionFilter ] = useState('Любая')\n\n    const statusFilters = [\"Любой\", \"Активыный\", 'Выходной', 'На больничном', 'В отпуске', 'Уволен']\n\n    const positionFilters = [\"Любая\", 'Диспетчер', 'Старший диспетчер', 'Служба контроля качества', 'Выделенный под проект']\n\n    return (\n        <FiltersDtyled>\n            <div className=\"filter-icon\"><img src={filterIcon} alt=\"Фильтр\"/></div>\n            <div className=\"filter_item status-filter\">\n                <span className=\"info\">Статус: </span>\n                <Dropdown value={statusFilter} options={statusFilters} onChange={(v) => setStatusFilter(v)}/>\n            </div>\n\n            <div className=\"filter_item\">\n                <span className=\"info\">Должность: </span>\n                <Dropdown value={positionFilter} options={positionFilters} onChange={(v) => setPositionFilter(v)}/>\n            </div>\n\n        </FiltersDtyled>\n    )\n}\n\n\nexport default Filters","import React, { useState, useEffect, useRef } from 'react'\nimport styled from 'styled-components'\n\nimport searchIcon from './icons/search.svg'\n\nconst SearchStyled = styled.div`\n    \n    margin: 0 10px;\n    flex: 20% 0 0;\n    margin-right: auto;\n\n    form {\n        position: relative;\n        height: 40px;\n\n        input {\n            height: 100%;\n            padding: 5px 10px;\n            width: 100%;\n            outline: none;\n            border: none;\n            border-bottom: 1px solid grey;\n        }\n\n        button {\n            background-color: #2c3e4e;\n            width: 35px;\n            height: 80%;\n            position: absolute;\n            top: 0;\n            right: 0;\n            border-radius: 5px;\n\n            img {\n                max-width: 100%;\n                width: 15px;\n            }\n        }\n    }\n`\n\nconst ExtraMenuStyled = styled.div`\n    position: absolute;\n    bottom: -80px;\n    left: 50%;\n    transform: translateX(-50%);\n    width: 100%;\n    background-color: white;\n    padding: 15px 20px;\n    z-index: 9;\n    border-bottom-right-radius: 7px;\n    border-bottom-left-radius: 7px;\n    box-shadow: 8px 8px 20px 0px rgba(0, 0, 0, 0.33);\n    max-width: 500px;\n    \n\n    .info {\n        margin-bottom: 10px;\n    }\n    .options {\n\n        display: flex;\n        justify-content: space-around;\n\n        li {\n            list-style: none;\n            display: flex;\n            cursor: pointer;\n\n            input {\n                margin-right: 15px;\n            }\n        }\n    }\n`\n\nconst ExtraMenu = ({open, setOpen}) => {\n\n    const [ activeOption, setActiveOption ] = useState('ФИО')\n\n    const node = useRef();\n\n    const searchOptions = [\n        {name: 'ФИО', value: 'name'},\n        {name: 'Стране', value: 'country'},\n        {name: 'Языку', value: 'language'},\n    ]\n\n    const handleClickOutside = e => {\n        console.log(\"clicking anywhere\");\n        if (node.current.contains(e.target)) {\n          // inside click\n          return;\n        }\n        // outside click\n        setOpen(false)\n    }\n\n    useEffect(() => {\n        if (open) {\n          document.addEventListener(\"mousedown\", handleClickOutside)\n        } else {\n          document.removeEventListener(\"mousedown\", handleClickOutside)\n        }\n    \n        return () => {\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n        }\n    }, [open])\n    \n    if(open) {\n        return (\n            <ExtraMenuStyled ref={node}>\n                <p className=\"info\">Искать по: </p>\n                <ul className=\"options\">\n                    {searchOptions.map(option => (\n                        <li key={option.value}><input name=\"searchOption\" type=\"radio\" value={option.value} id={option.value}/><label htmlFor={option.value}>{option.name}</label></li>\n                    ))}\n                </ul>\n            </ExtraMenuStyled>\n        )\n    } else {\n        return null\n    }\n\n\n}\n\n\nconst Search = () => {\n\n    const [ menuActive, setMenuActive ] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n    }\n\n    return (\n        <SearchStyled>\n            <form onSubmit={onSubmit} onClick={() => setMenuActive(true)} onFocus={() => setMenuActive(true)}>\n                <input placeholder=\"Поиск\" className=\"search_field\"/>\n                <button><img alt=\"Поиск\" src={searchIcon}/></button>\n                <ExtraMenu open={menuActive} setOpen={setMenuActive}/>\n            </form>\n        </SearchStyled>\n    )\n}\n\n\nexport default Search","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Link, withRouter } from 'react-router-dom'\n\nimport nextIcon from './icons/next.svg'\n\n\nconst PaginatorStyled = styled.div`\n    display: flex;\n    justify-content: flex-end;\n\n    button {\n\n        display: flex;\n        font-size: .9em;\n        align-items: center;\n        background: transparent;\n        width: 25px;\n        height: 25px;\n        border: 1px solid #2c3e4e;\n        justify-content: center;\n        transition: all .2s;\n\n        &:hover {\n            transform: scale(1.05);\n        }\n        \n        img {\n            max-width: 100%;\n            width: 13px;\n            transition: all .2s;\n\n\n\n            &.goBack {\n                transform-origin: 50% 50%;\n                transform: rotate(180deg);\n            }\n        }\n    }\n\n    .page {\n        font-weight: bold;\n        font-size: 1em;\n        background-color: black;\n        color: white;\n        border-radius: 50%;\n        width: 30px;\n        height: 30px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        padding: 3px;\n        margin: 6px 10px;\n    }\n`\n\nconst Paginator = ({page, setPage, history, loading, totalPages}) => {\n\n    useEffect(() => {\n        if(+page > totalPages) {\n            setPage(1)\n        } else if(page <= 0) {\n            setPage(1)\n        } \n    }, [])\n\n    const goBack = () => {\n        if(+page !== 1) {\n            setPage(+page-1)\n        }\n    }\n\n    const goForward = () => {\n        if(totalPages > +page) {\n            setPage(+page+1)\n        }\n    }\n\n    return (\n        <PaginatorStyled>\n            <button disabled={loading === null ? true : false} onClick={goBack}><img className=\"goBack\" src={nextIcon}/></button>\n            <button disabled={loading === null ? true : false} onClick={goForward}><img src={nextIcon}/></button>        \n        </PaginatorStyled>\n    )\n}\n\nexport default withRouter(Paginator)","import React from 'react'\nimport styled from 'styled-components'\n\nconst ShowAmountStyled = styled.div`\n    span {\n        margin-right: 5px;\n    }\n    font-size: .85em;   \n`\n\nconst ShowAmount = (props) => {\n\n    const limitOptins = [5, 10, 15, 20, 30]\n\n    const changeAmount = (e) => {\n        props.setLimit(e.target.value)\n    }\n\n    return (\n        <ShowAmountStyled>\n            <span>Показывать: </span>\n            <select value={props.limit} onChange={changeAmount}>\n                {limitOptins.map(option => (\n                <option value={option} key={option}>\n                    {option}\n                </option>))}\n            </select>\n        </ShowAmountStyled>\n    )\n}\n\nexport default ShowAmount","import styled from 'styled-components'\n\nconst ButtonModern = styled.button`\n    border: 2px solid #2c3e4e;\n    padding: 6px 20px;\n    border-radius: 3px;\n    font-size: 1em;\n    color: ${props => props.invert ? \"white\" : \"#2c3e4e\"};\n    background-color: ${props => props.invert ? \"#2c3e4e\" : \"white\"};\n    transition: all .2s;\n\n    &:hover {\n        background-color: #2c3e4e;\n        color: white;\n    }\n`\n\nexport default ButtonModern","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useHistory } from 'react-router-dom'\n\nimport Filters from './Filters'\nimport Search from './Search'\nimport Paginator from './Paginator'\nimport ShowAmount from './ShowAmount'\n\n//import addIcon from './icons/add.svg'\n\nimport ButtonModern from '../../../elements/ButtonModern'\n\nconst InnerBarStyled = styled.div`\n    padding: 20px 10px;\n    display: flex;\n    align-items: center;\n\n    .page-info {\n        font-size: .9em;\n        margin: 0 15px;\n    }\n`\n\nconst InnerBar = (props) => {\n\n    let history = useHistory()\n\n    const addDispatcher = () => {\n        history.push('/panel/dispatchers/add_dispatcher')\n    }\n\n    return (\n        <InnerBarStyled>\n            <ButtonModern style={{marginRight: 'auto'}} onClick={addDispatcher}>Добавить</ButtonModern>\n            {/* <Filters/> */}\n            {/* <Search/> */}\n            <ShowAmount limit={props.limit} setLimit={props.setLimit}/>\n            <div className=\"page-info\">\n                Стр. {props.page} из {props.totalPages === 0 ? '?' : props.totalPages}\n            </div>\n            <Paginator totalPages={props.totalPages} loading={props.dispatchers} page={props.page} setPage={props.setPage}/>\n\n        </InnerBarStyled>\n    )\n}\n\nexport default InnerBar","import React, { useEffect } from 'react'\nimport { Link, Route, Switch} from 'react-router-dom'\nimport styled from 'styled-components'\nimport StatusSelect from './StatusSelect'\nimport { getAllDispatchers } from \"../../services/dispatcherService\"\nimport Loader from './Loader'\nimport { useLocation } from 'react-router-dom'\nimport Dispatcher from './Dispatcher/Dispatcher'\nimport { useQueryState } from \"react-router-use-location-state\"\nimport AddDispatcher from './AddDispatcher/AddDispatcher'\n\nimport Card from '../../elements/Card'\nimport InnerBar from './InnerBar/InnerBar'\n\nconst CardCustom = styled(Card)`\n    padding: 10px 0;\n`\n\n\nconst DispatchersStyled = styled.div`\n    table {\n        border-collapse: collapse;\n        width: 100%;\n        overflow: scroll;\n        .center {\n            text-align: center;\n        }\n        thead {\n            th {\n                text-align: center;\n                padding: 10px 5px;\n            }\n        }\n        \n        .row_data {\n            td {\n                padding: 10px 10px;\n                font-size: .9em;\n                text-align: center;\n                &.status {\n                    position: relative;\n                }\n\n                span {\n                    text-align: left;\n                }\n            }\n            &:nth-child(2n) {\n                background-color: #ececec;\n            }\n        }\n    }\n`\n\n\nconst statusOptions = [\n    { value: 'fired', label: 'Уволен'},\n    { value: 'day_off', label: 'Выходной'},\n    { value: 'active', label: 'Активный'},\n    { value: 'vocation', label: 'В отпуске'},\n    { value: 'sick_leave', label: 'На больничном'},\n]\n\nconst Dispatchers = (props) => {\n    \n    let location = useLocation();\n\n    const [ totalPages, setTotalPages ] = React.useState(0)\n\n    useEffect(() => {\n\n        getAllDispatchers(page, limit)\n        .then(res => {\n            setDispathcers(res.docs)\n            setTotalPages(+res.pages)\n        })\n        .catch(err => {\n            console.error(err)\n        })\n\n    }, [])\n\n\n    const [ dispatchers, setDispathcers ] = React.useState(null)\n\n    const [ page, setPage ] = useQueryState('page', 1)\n    const [ limit, setLimit ] = useQueryState('limit', 10)\n\n\n    useEffect(() => {\n\n        setDispathcers(null)\n        getAllDispatchers(page, limit)\n        .then(res => {\n            setDispathcers(res.docs)\n            setTotalPages(+res.pages)\n            console.log(res)\n        })\n        .catch(err => {\n            console.error(err)\n        })\n\n    }, [page, limit])\n\n\n        return (\n            <DispatchersStyled >\n                <CardCustom style={!dispatchers ?  { minHeight: '80vh' }  : null}>\n                <InnerBar limit={limit} setLimit={setLimit} totalPages={totalPages} loading={dispatchers} page={page} setPage={setPage}/>\n            {dispatchers ? (\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Логин</th>\n                                <th>ФИО</th>\n                                <th>Должность</th>\n                                <th className=\"center\">Статус</th>\n                                <th className=\"center\">Номер SIP телефона</th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {dispatchers.map(dispatcher => (\n                               <tr className=\"row_data\" key={dispatcher.id}>\n                                    <td> <Link to={`/panel/dispatchers/${dispatcher.id}`}>{dispatcher.username}</Link></td>\n                                    <td><span>{dispatcher.surname} {dispatcher.name}</span></td>\n                                    <td>{dispatcher.position}</td>\n                                    <td className=\"status\">\n                                        <StatusSelect id={dispatcher.id} selected={dispatcher.status} options={statusOptions}>\n     \n                                        </StatusSelect>\n                                    </td>\n                                    <td className=\"center\">{dispatcher.SIPNumber}</td>\n    \n                                </tr>\n                            ))}\n                        </tbody>\n                </table> ) :  <Loader/>}\n\n                </CardCustom>\n\n                <Switch>\n                    <Route exact path=\"/panel/dispatchers/add_dispatcher\" render={() => <AddDispatcher />}/>\n\n                    <Route exact path={`/panel/dispatchers/:id`} render={({match}) => <Dispatcher id={match.params.id}/>}/>\n\n                </Switch>\n\n              \n            </DispatchersStyled>\n        )\n}\n\n\n\nexport default Dispatchers","import axios from \"axios\"\nimport { authHeader } from './misc/authHeader'\n\n\n//const baseUrl = '/api/cards'\nconst baseUrl = 'https://cors-anywhere.herokuapp.com/https://kadet-assistance.herokuapp.com/api/Cards'\n \nexport const getAllCards = async (page = 1, limit = 4) => {\n    //const res = await axios.get(`${baseUrl}?page=${page}&limit=${limit}`, {headers: authHeader()})\n    const res = await axios.get(`${baseUrl}/GetCards`)\n    return res.data\n}\n\nexport const getActiveCards = async (page = 1, limit = 4) => {\n    //const res = await axios.get(`${baseUrl}?page=${page}&limit=${limit}`, {headers: authHeader()})\n    const res = await axios.get(`${baseUrl}/GetActiveCards`)\n    return res.data\n}\nexport const getInactiveCards = async () => {\n    const res = await axios.get(`${baseUrl}/GetInactiveCards`)\n    return res.data\n}\n\nexport const getOneCard = async (id) => {\n    //const res = await axios.get(`${baseUrl}/${id}`, {headers: authHeader()})\n    const res = await axios.get(`${baseUrl}/GetCard/${id}`)\n    return res.data\n}\n\nexport const patchCard = async (id, data) => {\n    const res = await axios.patch(`${baseUrl}/${id}`, data, {headers: authHeader()})\n    return res.data\n}\n\nexport const addCard = async (data) => {\n    const res = await axios.post(`${baseUrl}/PostCard`, data)\n    return res.data\n}\n\nexport const deleteCard = async (id) => {\n    const res = await axios.delete(`${baseUrl}/DeleteCard/${id}`)\n    return res.data\n}\n\nexport const activateCard = async (id, data) => {\n    const res = await axios.post(`${baseUrl}/ActivateCard`, data)\n    return res.data\n}\n\nexport const searchByLastName = async (searchValue) => {\n    const res = await axios.get(`${baseUrl}/SearchBySecondName?searchString=${searchValue}`)\n    return res.data\n}\n\nexport const putCard = async (id, data) => {\n    const res = await axios.put(`${baseUrl}/PutCard/${id}`, data)\n    return res.data\n}\n\n\nexport const searchByVIN = async (searchValue) => {\n    const res = await axios.get(`${baseUrl}/SearchByVIN?searchString=${searchValue}`)\n    return res.data\n}\n\nexport const searchByCardNumber = async (searchValue) => {\n    const res = await axios.get(`${baseUrl}/SearchByCardNumber?searchString=${searchValue}`)\n    return res.data\n}","import React, { useState, useRef } from 'react'\nimport styled from 'styled-components'\nimport { notify } from '../../reducers/notifications'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { putCard, getOneCard } from '../../services/cardsService'\n\n\nconst SelectStyled = styled.ul`\n    position: absolute;\n    background-color: white;\n    box-shadow: 0px 0px 4px 0px rgba(0,0,0,.4);\n    border-radius: 10px;\n    cursor: pointer;\n    top: 0px;\n    left: 0;\n    z-index: 99;\n    width: 100%;\n\n    li {\n        list-style: none;\n        padding: 5px 0;\n        text-align: center;\n\n        &:first-child {\n            border-top-left-radius: 10px;\n            border-top-right-radius: 10px;\n            &:hover {\n                background-color: white;\n                cursor: default;\n            }\n        }\n\n        &:last-child {\n            border-bottom-left-radius: 10px;\n            border-bottom-right-radius: 10px;\n        }\n\n        &:hover {\n            background-color: lightgrey;\n        }\n\n    }\n`\n\nconst Selected = styled.div`\n    cursor: pointer;\n    font-size: .8em;\n    border-radius: 30px;\n    max-width: 110px;\n    padding: 3px;\n    text-align: center;\n    font-weight: bold;\n    color: white;\n    margin: 0 auto;\n    min-width: 110px;\n    background-color: #4caf50;\n\n    &.active {\n        background-color: #a7a7a7;\n    }\n`\n\n\nconst StatusSelect = (props) => {\n\n    const [ active, setActive ] = useState(false)\n\n    const node = useRef()\n\n    const handleClickOutside = e => {\n        if (node.current.contains(e.target)) {\n          // inside click\n          return\n        }\n        setActive(false)\n      };\n\n    const openDropDown = (e) => {\n        setActive(!active)\n    }\n\n    React.useEffect(() => {\n        if (active) {\n          document.addEventListener(\"mousedown\", handleClickOutside);\n        } else {\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n        }\n\n        return () => {\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n      }, [active]);\n\n      let history = useHistory()\n\n      const deactivateCard = async (id) => {\n            const cardData = await getOneCard(id)\n            console.log({\n                ...cardData,\n                cardStatus: 1\n            })\n            putCard(id, {\n                ...cardData,\n                cardStatus: 1\n            }).then( res => {\n                notify({\n                    type: 'success',\n                    time: '2000',\n                    heading: 'Деактивация успешна'\n                })\n            }).catch(err => {\n                notify({\n                    type: 'error',\n                    time: 2000,\n                    heading: 'Не удалось деактивировать'\n                })\n            })\n      }\n\n      const activateCard = (id) => {\n            history.push(`/panel/cards/activate/${id}`)\n      }\n\n\n    if(props.status === 1) {\n        return (\n            <>\n                <Selected className={props.status === 1 ? 'active' : ''} onClick={() => setActive(true)}>Не активна</Selected>\n                {active ? (\n                    <SelectStyled ref={node} onMouseLeave={openDropDown} onClick={(e) => openDropDown(e)}>\n                        <li>Не активна</li>\n                        <li onClick={() => activateCard(props.id)}>Активировать</li>\n                    </SelectStyled>\n                ) : null}\n            </>\n        )\n    } else if(props.status === 0) {\n        return (\n            <>\n                <Selected className={props.status === 1 ? 'active' : ''}  onClick={() => setActive(true)}>Активна</Selected>\n                {active ? (\n                    <SelectStyled ref={node} onMouseLeave={openDropDown} onClick={(e) => openDropDown(e)}>\n                        <li >Активна</li>\n                        <li onClick={() => deactivateCard(props.id)}>Деактивировать</li>\n                    </SelectStyled>\n                ) : null}\n            </>\n        )\n    }\n\n}\n\nexport default connect(null, { notify })(StatusSelect)","import React from 'react'\nimport ContentLoader from 'react-content-loader'\n\n\nconst rowNumbers = [...Array(20).keys()]\n\nconst Loader = props => (\n\n    \n    <ContentLoader \n        speed={2}\n        width=\"100%\"\n        height=\"70vh\"\n        backgroundColor=\"#f3f3f3\"\n        foregroundColor=\"#ecebeb\"\n    >\n\n        {rowNumbers.map(i => (\n            <rect key={i} x=\"0px\" y={`${(i+1) * 45 - 50}px`} rx=\"0\" ry=\"0\" width=\"100%\" height=\"35\" /> \n        ))}\n\n\n\n  </ContentLoader>\n)\n\n\nexport default Loader","import styled from 'styled-components'\nimport ButtonModern from '../../../elements/ButtonModern'\n\n\nexport const DeleteButton = styled.button`\n    border: 2px solid red;\n    padding: 6px 20px;\n    border-radius: 3px;\n    margin-left: 10px;\n    font-size: 1em;\n    color: red;\n    background-color: transparent;\n    transition: all .2s;\n\n    &:hover {\n        background-color: red;\n        color: white;\n    }\n`\n\n\nexport const ViewCardStyled = styled.div`\n    position: fixed;\n    overflow: scroll;\n    top: 0px;\n    width: 500px;\n    height: 40px;\n    left: 0;\n    background: rgba(0, 0, 0, .5);\n    z-index: 999;\n    padding: 20px;\n    height: 100vh;\n    width: 100%;\n    display: flex;\n    z-index: 99;\n\n    .content {\n        background-color: rgb(231, 231, 231);\n        width: 100%;\n        max-width: 650px;\n        margin: auto;\n        border-radius: 10px;\n        padding: 20px;\n        border-top: 15px solid #2c3e4e;\n    }\n`\n\nexport const InactiveCard = styled.div`\n\n    .card-number {\n        margin: 20px 0;\n\n        .info {\n            font-size: .9em;\n            font-style: italic;\n            margin-bottom: 5px;\n        }\n\n        .number {\n            background-color: #d6d6d6;\n            padding: 10px;\n            font-size: 1.2em;\n            font-family: 'Verdana',sans-serif;\n            font-weight: bold;\n            border-radius: 7px;\n            letter-spacing: 3px;\n            color: #2b2b2b;\n        }   \n    }\n\n    .service-list {\n        display: flex;\n        align-content: center;\n\n        .info {\n            font-size: .9em;\n            font-style: italic;\n            margin-bottom: 5px;\n            margin-right: 5px;\n        }\n\n        .service {\n            font-weight: bold;\n        }\n    }\n`\n\nexport const ActiveCard = styled.div`\n\n    .info {\n        font-size: .9em;\n        font-style: italic;\n        margin-bottom: 5px;\n        color: #656565;\n    }\n\n    h4 {\n        margin-bottom: 20px;\n    }\n\n    .col-2 {\n        display: flex;\n        justify-content: space-between;\n        \n        div:first-child {\n            flex: 45% 0 0;\n        }\n\n        div:last-child {\n            flex: 45% 0 0;\n        }\n\n        @media screen and (max-width: 600px){\n            flex-wrap: wrap;\n\n            div:first-child,\n            div:last-child  {\n                flex: 100% 1 0;\n            }\n\n            div:first-child {\n                margin-bottom: 20px;\n            }\n        }\n    }\n\n    .card-number {\n        margin-bottom: 20px;\n\n        .number {\n            background-color: #d6d6d6;\n            padding: 10px;\n            font-size: 1.2em;\n            font-family: 'Verdana',sans-serif;\n            font-weight: bold;\n            border-radius: 7px;\n            letter-spacing: 3px;\n            color: #2b2b2b;\n        } \n    }\n    .card-holder {\n        margin-bottom: 20px;\n        .holder {\n            background-color: #d6d6d6;\n            padding: 10px;\n            font-size: 1em;\n            font-family: 'Arial',sans-serif;\n            border-radius: 7px;\n            color: #2b2b2b;\n        }\n    }\n\n    .car-number-container {\n        display: flex;\n        flex-wrap: wrap;\n\n        .info {\n            width: 100%;\n        }\n\n        .car-number {\n            border-radius: 7px;\n            padding: 10px;\n            border: 2px solid grey;\n            background-color: white;\n            width: auto;\n            letter-spacing: 2px;\n            font-weight: bold;\n        }\n    }\n\n    .car-vin-container {\n        .info {\n            margin-bottom: 15px;\n        }\n\n        .car-vin {\n            font-weight: bold;\n        }\n    }\n\n    .car-make-color {\n        margin-top: 20px;   \n        margin-bottom: 20px;\n\n        .car-color-container {\n            .car-color {\n                display: flex;\n                align-items: center;\n\n                .color-box {\n                    flex: 25px 0 0;\n                    border: 2px solid black;\n                    width: 25px;\n                    height: 25px;\n                    border-radius: 50ex;\n                    margin-left: 10px;\n                }\n            }\n        }\n    }\n\n    .email-container {\n        margin-top: 15px;\n        margin-bottom: 20px;\n\n        .info {\n            margin-right: 10px;\n        }\n\n        .email {\n            background-color: #d6d6d6;\n            padding: 10px;\n            font-size: 1.1em;\n            font-family: 'Verdana',sans-serif;\n            border-radius: 7px;\n            color: #2b2b2b;\n        }\n    }\n\n    .paid {\n        div {\n            display: flex;\n            align-items: center;\n\n            img {\n                width: 20px;\n                margin-left: 5px;\n            }\n        }\n    }\n\n`\n\nexport const Button = styled(ButtonModern)`\n    background-color: ${props => props.invert ? \"#2c3e4e\" : \"rgb(231, 231, 231)\"};\n    margin-top: 20px;\n`\n","import React, { useEffect, useState } from 'react'\nimport { useHistory, Link } from 'react-router-dom'\nimport { getOneCard, deleteCard } from '../../../services/cardsService'\nimport { parseDate } from '../../../utils/dateParser'\nimport { notify } from '../../../reducers/notifications'\nimport { connect } from 'react-redux'\n\nimport okIcon from '../../../assets/imgs/ok.svg'\nimport errorIcon from '../../../assets/imgs/error.svg'\n\nimport { Button, ViewCardStyled, InactiveCard, ActiveCard, DeleteButton } from './CardStyled'\n\nconst ViewCard = ({id, notify}) => {\n\n    let history = useHistory()\n\n    const closeUserInfo = (e) => {\n        e.stopPropagation()\n        history.push('/panel/cards')\n    }\n\n    const [ card, setCard ] = useState(null)\n\n    useEffect(() => {\n        getOneCard(id)\n        .then(res => {\n            setCard(res)\n            console.log(res)\n        })\n        .catch(err => { \n            console.log(err)\n        })\n    }, [])\n\n    const removeCard = (id) => {\n        console.log(id)\n        deleteCard(+id)\n        .then(res => {\n            notify({\n                type: 'success',\n                heading: 'Карта удалена',\n                time: 2000\n            })\n            history.push('/panel/cards?type=inactive')\n        })\n        .catch(err => {\n            notify({\n                type: 'error',\n                heading: 'Что-то пошло не так',\n                time: 2000\n            })\n        })\n    }\n\n    return (\n        <ViewCardStyled onClick={closeUserInfo}>\n            <div className=\"content\" onClick={(e) => e.stopPropagation()}>\n                {card ? (\n\n                   card.cardStatus === 0 ? \n                   (\n                    <ActiveCard>\n                        <h4>Карта активирована</h4>\n                        <div className=\"card-number\">\n                            <p className=\"info\">Номер карты:</p>\n                            <div className=\"number\">{card.cardNumber}</div>\n                        </div>\n\n                        <div className=\"card-holder\">\n                            <p className=\"info\">Держатель карты:</p>\n                            <div className=\"holder\">{card.clientId}</div>\n                        </div>\n\n                        <h4>Информация об автомобиле:</h4>\n                        <div className=\"col-2\">\n                            <div className=\"car-number-container\">\n                                <p className=\"info\">Номер машины:</p>\n                                <div className=\"car-number\">{card.carNumber}</div>\n                            </div>\n                            <div className=\"car-vin-container\">\n                                <p className=\"info\">VIN машины: </p>\n                                <div className=\"car-vin\">\n                                    <p>{card.vin}</p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"col-2 car-make-color\">\n                            <div className=\"car-make-container\">\n                                <p className=\"info\">Производитель:</p>\n                                <div className=\"car-make\">{card.carMake}</div>\n                            </div>\n                            <div className=\"car-color-container\">\n                                <p className=\"info\">Цвет:</p>\n                                <div className=\"car-color\">\n                                    <p>{card.color} </p><div style={{backgroundColor: card.color}} className=\"color-box\"></div>\n                                </div>\n                            </div>\n                        </div>\n                        <h4>Информация о клиенте: </h4>\n                        <div className=\"col-2 city-phone\">\n                            <div className=\"city-container\">\n                                <p className=\"info\">Город: </p>\n                                <div className=\"city\">{card.city}</div>\n                            </div>\n                            <div className=\"phone-container\">\n                                <p className=\"info\">Номер телефона: </p>\n                                <div className=\"phone\">{card.phoneNumber}</div>\n                            </div>\n                        </div>\n                        <div className=\"email-container\">\n                            <p className=\"info\">Email: </p>\n                            <div className=\"email\"><a taget=\"_blank\" href={`mailto:${card.clientId}`}>{card.clientId}</a></div>\n                        </div>\n\n                        <h4>Информация о карте: </h4>\n                        <div style={{marginBottom: '20px'}} className=\" col-2\">\n                            <div className=\"date-activated\">\n                                <p className=\"info\">Дата активации: </p>\n                                <div>{parseDate(card.actionStartDate)}</div>\n                            </div>\n                            <div className=\"date-sold\">\n                                <p className=\"info\">Дата продажи: </p>\n                                <div>{parseDate(card.dateOfContractWithClient)}</div>\n                            </div>\n                        </div>\n\n                        <div className=\" col-2\">\n                            <div className=\"paid\">\n                                <p className=\"info\">Статус оплаты: </p>\n                                <div>{card.paid ? (<>Карта оплачена <img src={okIcon}/></>) : (<>Карта не оплачена<img src={errorIcon}/></>)}</div>\n                            </div>\n                            <div className=\"price\">\n                                <p className=\"info\">Цена карты: </p>\n                                <div>{card.cardCost}</div>\n                            </div>\n                        </div>\n\n                        <Button style={{marginTop: '20px'}} invert>Деактивировать</Button>\n                        <DeleteButton onClick={() => removeCard(card.id)}>Удалить</DeleteButton>\n               \n                    </ActiveCard>\n                   ) \n                   : \n                   (\n                    <InactiveCard>\n                        <h4>Карта не активирована</h4>\n                        <div className=\"card-number\">\n                            <p className=\"info\">Номер карты:</p>\n                            <div className=\"number\">{card.cardNumber}</div>\n                        </div>\n                        <div className=\"service-list\">\n                            <p className=\"info\">Пакет услуг:</p>\n                            <div className=\"service\">{card.ServicesId}</div>\n                        </div>\n\n                        <Link to={`/panel/cards/activate/${id}`}><Button>Активировать</Button></Link>\n                        <DeleteButton onClick={() => removeCard(card.id)}>Удалить</DeleteButton>\n\n                    </InactiveCard>\n                   )\n\n                ) : <p>Loading...</p>}\n\n            </div>\n        </ViewCardStyled>\n    )\n}\n\nexport default connect(null, { notify })(ViewCard)","import ButtonModern from '../../../elements/ButtonModern'\nimport styled from 'styled-components'\nimport {  Field, Form } from 'formik'\nimport Card from '../../../elements/Card'\n\n\n\nexport const ActivateCardStyled = styled(Card)`\n\n`\n\nexport const FormStyled = styled(Form)`\n    width: 100%;\n    max-width: 700px;\n    display: flex;\n    flex-direction: column;\n    padding-left: 40px;\n\n\n    @media screen and (max-width: 825px) {\n        padding-left: 0;\n    }\n`\n\nexport const SubmitButton = styled(ButtonModern)`\n    margin-top: 20px;\n    width: 140px;\n`\nexport const Input = styled(Field)`\n    width: 100%;\n    border: none;\n    padding: 8px 10px;\n    outline: none;\n    font-size: .95em;\n    width: 100%;\n    border-bottom: 2px solid black;\n`\nexport const TwoInLine = styled.div`\n\n    display: flex;\n    margin-bottom: 20px;\n\n    *:first-child {\n        flex: 45% 0 0;\n        margin-right: 10%;\n        margin-bottom: 0;\n    }\n\n    *:last-child {\n        flex: 45% 0 0;\n        margin-bottom: 0;\n    }\n\n    @media screen and (max-width: 550px) {\n\n        flex-wrap: wrap;\n        margin-bottom: 0;\n\n        *:first-child {\n            flex: 100% 0 0;\n            margin-right: 0;\n            margin-bottom: 20px;\n        }\n\n        *:last-child {\n            flex: 100% 0 0;\n            margin-bottom: 20px;\n\n        }\n    }\n`\n\nexport const FieldGroup = styled.div`\n    position: relative;\n    margin: 30px 0;\n    width: 100%;\n\n    label {\n        position: absolute;\n        top: -20px;\n        font-size: .85em;\n        left: 0;\n    }\n`\n","import React, { useState } from 'react'\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\nimport Loader from 'react-loader-spinner'\nimport { notify } from '../../../reducers/notifications'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { activateCard } from '../../../services/cardsService'\nimport { ActivateCardStyled, SubmitButton, Input, TwoInLine, FormStyled, FieldGroup } from './ActivateCardStyled'\n\n\nconst ActivateCard = ({id, notify}) => {\n\n\n    const initialValues = {\n        \"Id\": +id,\n        \"ClientId\": 0,\n        \"ClientInfo\": {\n            \"Id\": 0,\n            \"ClientFristName\": \"\",\n            \"ClientSecondName\": \"\",\n            \"ClientThirdName\": \"\",\n            \"Email\": \"\",\n            \"PhoneNumber\": \"\",\n            \"CarBrandId\": 0,\n            \"CarBrand\": {\n            \"Id\": 0,\n            \"Name\": \"\"\n            },\n            \"StateNumber\": \"\",\n            \"Region\": \"\"\n        },\n        \"SellerFirstName\": \"\",\n        \"SellerSecondName\": \"\",\n        \"SellerThirdName\": \"\",\n        \"ManagerFirstName\": \"\",\n        \"ManagerSecondName\": \"\",\n        \"ManagerThirdName\": \"\",\n        \"EmployerFirstName\": \"\",\n        \"EmployerSecondName\": \"\",\n        \"EmployerThirdName\": \"\"\n    }\n\n    const [ loading, setLoading ] = useState(false)\n\n    let history = useHistory()\n\n    const onSubmit = (values) => {\n        setLoading(true)\n\n        console.log(id, values)\n\n        activateCard(id, values)\n        .then(res => {\n            setLoading(false)\n            notify({\n                type: 'success',\n                time: 2000,\n                heading: 'Активация успешна',\n                text: 'Карта активирована'\n            })\n            history.push('/panel/cards')\n        })\n        .catch(err => {\n            notify({\n                type: 'error',\n                time: 2000,\n                heading: 'Что-то пошло не так'\n            })\n            setLoading(false)\n        })\n        \n    }\n\n\n    return (\n        <ActivateCardStyled>\n            <h2 style={{marginBottom: '20px'}}>Активация карты</h2>\n\n            <Formik initialValues={initialValues} onSubmit={onSubmit}>\n                <FormStyled>\n\n                    <TwoInLine>\n                        <FieldGroup>\n                            <label>Имя клиента</label>\n                            <Input name=\"ClientInfo.ClientFristName\" type=\"text\" placeholder=\"Имя клиента\"/>\n                        </FieldGroup>\n\n                        <FieldGroup>\n                            <label>Фамилия клиента</label>\n                            <Input name=\"ClientInfo.ClientSecondName\" type=\"text\" placeholder=\"Фамилия клиента\"/>\n                        </FieldGroup>\n                    </TwoInLine>\n\n                    <FieldGroup>\n                        <label>Отчество клиента</label>\n                        <Input name=\"ClientInfo.ClientThirdName\" type=\"text\" placeholder=\"Отчество клиента\"/>\n                    </FieldGroup>\n\n                    <FieldGroup>\n                        <label>Email клиента</label>\n                        <Input name=\"ClientInfo.Email\" type=\"email\" placeholder=\"Email клиента\"/>\n                    </FieldGroup>\n\n                    <FieldGroup>\n                        <label>Телефон клиента</label>\n                        <Input name=\"ClientInfo.PhoneNumber\" type=\"tel\" placeholder=\"Телефон клиента\"/>\n                    </FieldGroup>\n\n                    <FieldGroup>\n                        <label>Марка машины клиента</label>\n                        <Input name=\"ClientInfo.CarBrand.Name\" type=\"text\" placeholder=\"Марка машины клиента\"/>\n                    </FieldGroup>\n\n                    <FieldGroup>\n                        <label>Регион клиента</label>\n                        <Input name=\"ClientInfo.Region\" type=\"text\" placeholder=\"Регион клиента\"/>\n                    </FieldGroup>\n\n                    <FieldGroup>\n                        <label>Штат клиента</label>\n                        <Input name=\"ClientInfo.StateNumber\" type=\"text\" placeholder=\"Штат клиента\"/>\n                    </FieldGroup>\n\n\n                    <TwoInLine>\n                        <FieldGroup>\n                            <label>Имя продавца</label>\n                            <Input name=\"SellerFirstName\" type=\"text\" placeholder=\"Имя продавца\"/>\n                        </FieldGroup>\n\n                        <FieldGroup>\n                            <label>Фамилия продавца</label>\n                            <Input name=\"SellerSecondName\" type=\"text\" placeholder=\"Фамилия продавца\"/>\n                        </FieldGroup>                        \n                    </TwoInLine>\n\n                    <FieldGroup>\n                            <label>Отчество продавца</label>\n                            <Input name=\"SellerThirdName\" type=\"text\" placeholder=\"Отчество продавца\"/>\n                    </FieldGroup>  \n\n\n                    <TwoInLine>\n                        <FieldGroup>\n                            <label>Имя менеджера</label>\n                            <Input name=\"ManagerFirstName\" type=\"text\" placeholder=\"Имя менеджера\"/>\n                        </FieldGroup>\n\n                        <FieldGroup>\n                            <label>Фамилия менеджера</label>\n                            <Input name=\"ManagerSecondName\" type=\"text\" placeholder=\"Фамилия менеджера\"/>\n                        </FieldGroup>                        \n                    </TwoInLine>\n\n                    <FieldGroup>\n                        <label>Отчество менеджера</label>\n                        <Input name=\"ManagerThirdName\" type=\"text\" placeholder=\"Отчество менеджера\"/>\n                    </FieldGroup>  \n\n                    \n\n                    <TwoInLine>\n                        <FieldGroup>\n                            <label>Имя сотрудника</label>\n                            <Input name=\"EmployerFirstName\" type=\"text\" placeholder=\"Имя сотрудника\"/>\n                        </FieldGroup>\n                        <FieldGroup>\n                            <label>Фамилия сотрудника</label>\n                            <Input name=\"EmployerSecondName\" type=\"text\" placeholder=\"Фамилия сотрудника\"/>\n                        </FieldGroup>\n                    </TwoInLine>\n                    \n                    <FieldGroup>\n                        <label>Отчество сотрудника</label>\n                        <Input name=\"EmployerThirdName\" type=\"text\" placeholder=\"Отчество сотрудника\"/>\n                    </FieldGroup>\n\n                    <SubmitButton className=\"submit_btn\" type=\"submit\">{loading ? <Loader type=\"Puff\" color=\"#000\" height={15} width={15}/> : \"Активировать\"}</SubmitButton>\n                </FormStyled>\n            </Formik>\n\n        </ActivateCardStyled>\n    )\n}\n\nexport default connect(null, { notify })(ActivateCard)","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\nimport { withRouter, useHistory } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { notify, clearNotifications } from '../../../reducers/notifications'\nimport { addCard } from '../../../services/cardsService'\nimport Loader from 'react-loader-spinner'\n// import StatusPicker from './StatusPicker'\n\n\nimport Button from '../../../elements/Button'\nimport closeIcon from '../../../assets/imgs/close_icon.svg'\n// import userIcon from './icons/user.svg'\n// import passwordIcon from './icons/password.svg'\n// import emailIcon from './icons/email.svg'\n// import phoneIcon from './icons/phone.svg'\n// import calendarIcon from './icons/calendar.svg'\nimport PositionPicker from '../../Dispatchers/AddDispatcher/PositionPicker'\n\nconst AddCardStyled = styled.div`\n    position: fixed;\n    overflow: scroll;\n    top: 0px;\n    width: 500px;\n    height: 40px;\n    left: 0;\n    background: rgba(0, 0, 0, .5);\n    z-index: 99;\n    padding: 40px 20px;\n    height: 100vh;\n    width: 100%;\n    display: flex;\n\n    div.content {\n        width: 100%;\n        max-width: 650px;\n        margin: auto;\n        padding: 40px 30px;\n        background-color: #e7e7e7;\n        border-radius: 10px;\n        position: relative;\n        padding-top: 70px;\n\n\n        .card_title {\n            background-color: #2c3e4e;\n            padding: 15px;\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            display: flex;\n            align-items: center;\n\n            span {\n                font-weight: bold;\n                color: white;\n                font-size: 1em;\n                margin-right: auto;\n            }\n\n            img {\n                max-width: 40px;\n                width: 25px;\n                cursor: pointer;\n            }\n        }\n    }\n\n`\n\nconst FormStyled = styled(Form)`\n    display: flex;\n    flex-direction: column;\n\n    .form_line {\n\n        h3 {\n            margin-bottom: 20px;\n        }\n\n        &.two_in_one {\n            .form_content {\n                display: flex;\n\n                *:first-child {\n                    flex: 50% 0 0;\n                    margin-right: 20px;\n                }\n\n                *:last-child {\n                    flex: 50% 0 0;\n                    padding-right: 20px;\n                }\n            }   \n        }\n\n        &.full_name {\n            display: flex;\n            justify-content: space-around;\n\n            div:first-child {\n                padding-right: 20px;\n            }\n            div:last-child {\n                padding-left: 20px;\n            }\n        }   \n\n        &.credentials {   \n            \n            .form_content {\n                display: flex;\n\n                *:first-child {\n                    flex: 50% 0 0;\n                    margin-right: 20px;\n                }\n\n                *:last-child {\n                    flex: 50% 0 0;\n                    margin-right: 20px;\n                }\n            }            \n        }  \n\n        &.status_position {\n            margin-bottom: 20px;\n            .form_content {\n                display: flex;\n\n                .status {\n                    flex: 50% 0 0;\n                    margin-right: 20px;\n                    position: relative;\n\n                    label {\n                        margin-bottom: 10px;\n                        font-size: .85em;\n                    }\n                }\n\n                .position {\n                    flex: 50% 0 0;\n                    margin-right: 20px;\n                    position: relative;\n                }\n            }\n        }\n    }\n\n\n\n`\n\nconst FieldGroup = styled.div`\n    position: relative;\n    margin: 20px 0;\n    width: 100%;\n\n    label {\n        position: absolute;\n        top: -20px;\n        font-size: .85em;\n        left: 0;\n    }\n\n    .with_image {\n        position: relative;\n        text-align: center;\n\n        img {\n            max-width: 100%;\n            width: 20px;\n            position: absolute;\n            left: 10px;\n            top: 50%;\n            transform: translateY(-50%);\n        }\n\n        input {\n            padding-left: 40px;\n            width: 100%;\n        }\n    }\n`\n\nconst InputStyled = styled(Field)`\n    border: none;\n    padding: 8px 10px;\n    border-radius: 5px;\n    outline: none;\n    font-size: .95em;\n    width: 100%;\n`\n\nconst SubmitButton = styled(Button)`\n    margin-top: 25px;\n`\n\n\nconst AddCard = (props) => {\n\n\n    const closeUserInfo = (e) => {\n        e.stopPropagation()\n        return props.history.push('/panel/cards')\n    }\n\n    const confirmation = (e) => {\n        props.clearNotifications()\n        props.notify({\n            heading: 'Вы уверены?',\n            text: 'Данные будут сброшены',\n            type: 'submit',\n            onOkFunc: () => closeUserInfo(e)\n        })\n    }\n\n    const [ selectedStatus, setSelectedStatus ] = useState('active')\n    const [ selectedPosition, setSelectedPosition ] = useState(0)\n\n    const initialValues = {\n\n        \"CardNumber\": \"\",\n        \"CardCost\": 0,\n        \"Duration\": \"2020-05-06T21:21:10.476Z\",\n        \"VIN\": \"3456jk2234\",\n        \"Color\": \"blue\",\n        \"ServicesId\": 1,\n        \"NumberOfContractWithKadet\": 12,\n        \"DateOfContractWithKadet\": \"2020-05-06T21:21:10.476Z\",\n        \"NumberOfContractWithClient\": 14,\n        \"DateOfContractWithClient\": \"2020-05-06T21:21:10.476Z\",\n        \"ActionStartDate\": \"2020-05-06T21:21:10.476Z\",\n        \"DeactivationDate\": \"2020-05-06T21:21:10.476Z\",\n        \"CardAppeal\": \"akjf\"\n\n    }\n\n    const [ loading, setLoading ] = useState(false)\n\n    let history = useHistory()\n\n    const onSubmit = (values, { setSubmitting }) => {\n\n        setLoading(true)\n        console.log(values)\n        addCard(values)\n        .then(res => {\n           console.log(res)\n\n           setLoading(false)\n\n           history.push(`/panel/cards?type=inactive`)\n\n            props.notify({\n                type: 'success',\n                heading: 'Карта добавлена!',\n                time: 2000\n            })\n         })\n         .catch(err => {\n\n            setLoading(false)\n            props.notify({\n                type: 'error',\n                heading: 'Что-то пошло не так!',\n                time: 2000\n            })\n            console.log(err)\n         })\n        \n\n    }\n\n\n    const statusOptions = [\n        { value: 'fired', label: 'Уволен'},\n        { value: 'day_off', label: 'Выходной'},\n        { value: 'active', label: 'Активный'},\n        { value: 'vocation', label: 'В отпуске'},\n        { value: 'sick_leave', label: 'На больничном'},\n    ]\n\n    const servicesOptions = [0, 1, 2]\n\n    return (\n        <AddCardStyled>\n            <div className=\"content\" onClick={(e) => e.stopPropagation()}>\n                <div className=\"card_title\"><span>Добавить новую карту: </span><img onClick={confirmation} src={closeIcon}/></div>\n                <Formik initialValues={initialValues} onSubmit={onSubmit}>\n\n                    <FormStyled>\n\n                        <div className=\"form_line full_name\">\n                            <FieldGroup>\n                                <label htmlFor=\"FirstName\">Номер: </label>\n                                <InputStyled required placeholder=\"Номер\" name=\"CardNumber\" type=\"text\" />\n                            </FieldGroup>\n                            <FieldGroup>\n                                <label htmlFor=\"SecondName\">Цена карты: </label>\n                                <InputStyled required placeholder=\"Цена\" name=\"CardCost\" type=\"number\" />\n                            </FieldGroup>\n                        </div>\n\n                        <FieldGroup>\n                            <div className=\"position\">\n                                    <label htmlFor=\"AnotherLanguage\">Пакет услуг: </label>\n                                    <PositionPicker selected={selectedPosition} setSelected={setSelectedPosition} options={servicesOptions}/>\n                            </div>\n                        </FieldGroup>\n                        <SubmitButton className=\"submit_btn\" type=\"submit\">{loading ? <Loader type=\"Puff\" color=\"#000\" height={15} width={15}/> : \"Добавить\"}</SubmitButton>\n                    </FormStyled>\n                </Formik>\n            </div>\n        </AddCardStyled>\n    )\n}\n\nexport default connect(null, {notify, clearNotifications})(withRouter(AddCard))","import React, { useState, useEffect, useRef } from 'react'\nimport styled from 'styled-components'\nimport { getPositions } from '../../../services/misc/roles'\n\n\nimport filterIcon from './icons/filter.svg'\n\nconst FiltersDtyled = styled.div`\n    flex: 30% 0 0;\n    display: flex;\n    align-items: center;\n\n    .filter-icon {\n      display: flex;\n      justify-content: center;\n      align-content: center;\n      min-width: 20px;\n      width: 18px;\n      margin-right: 15px;\n      img {\n        width: 100%;\n      }\n    }\n\n    .filter_item {\n        display: flex;\n        align-items: center;\n        position: relative;\n        \n        &.status-filter {\n          margin-right: 20px;\n        }\n\n        span.info {\n            font-size: .7em;\n            position: absolute;\n            top: -50%;\n            left: 0;\n            \n        }\n    }\n`\n\nconst DropDownStyled = styled.div`\n  display: flex;\n  position: relative;\n\n  .dropdown-toggler {\n    background-color: #45a9db;\n    padding: 5px;\n    font-size: .9em;\n    border-radius: 5px;\n    color: white;\n    position: relative;\n    z-index: 9;\n    max-height: 27px;\n    height: 27px;\n  }\n\n  .dropdown-menu {\n    position: absolute;\n    left: 0;\n    top: 0;\n    background-color: #607d8b;\n    border-radius: 5px;\n    z-index: 99;\n\n    .dropdown-menu-item {\n      list-style: none;\n      font-size: .9em;\n      text-align: center;\n      padding: 5px 10px;\n      cursor: pointer;\n      color: white;\n    }\n  }\n`\n\n\nconst Dropdown = ({ value, options, onChange }) => {\n\n\n  const node = useRef()\n  const [open, setOpen] = useState(false)\n\n  const handleClickOutside = e => {\n    if (node.current.contains(e.target)) {\n      // inside click\n      return;\n    }\n    // outside click\n    setOpen(false)\n  }\n\n  const handleChange = selectedValue => {\n    onChange(selectedValue)\n    setOpen(false)\n  }\n\n\n  useEffect(() => {\n    if (open) {\n      document.addEventListener(\"mousedown\", handleClickOutside)\n    } else {\n      document.removeEventListener(\"mousedown\", handleClickOutside)\n    }\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    }\n  }, [open])\n\n\n  return (\n    <DropDownStyled ref={node} className=\"dropdown\">\n      <button className=\"dropdown-toggler\" onClick={e => setOpen(!open)}>\n        {value || 'Все'}\n      </button>\n      {open ? (\n        <ul className=\"dropdown-menu\">\n          {options.map(opt => (\n            <li key={opt} className=\"dropdown-menu-item\" onClick={e => handleChange(opt)}>\n              {opt}\n            </li>\n          ))}\n        </ul>\n      ) : null}\n    </DropDownStyled>\n  )\n}\n\nconst Filters = () => {\n\n    const [ statusFilter, setStatusFilter ] = useState('Любой')\n    const [ positionFilter, setPositionFilter ] = useState('Любая')\n\n    const statusFilters = [\"Любой\", \"Активыный\", 'Выходной', 'На больничном', 'В отпуске', 'Уволен']\n\n    const positionFilters = [\"Любая\", 'Диспетчер', 'Старший диспетчер', 'Служба контроля качества', 'Выделенный под проект']\n\n    return (\n        <FiltersDtyled>\n            <div className=\"filter-icon\"><img src={filterIcon} alt=\"Фильтр\"/></div>\n            <div className=\"filter_item status-filter\">\n                <span className=\"info\">Статус: </span>\n                <Dropdown value={statusFilter} options={statusFilters} onChange={(v) => setStatusFilter(v)}/>\n            </div>\n\n            <div className=\"filter_item\">\n                <span className=\"info\">Должность: </span>\n                <Dropdown value={positionFilter} options={positionFilters} onChange={(v) => setPositionFilter(v)}/>\n            </div>\n\n        </FiltersDtyled>\n    )\n}\n\n\nexport default Filters","import React, { useState, useEffect, useRef } from 'react'\nimport styled from 'styled-components'\nimport Loader from 'react-loader-spinner'\n\n\nimport searchIcon from './icons/search.svg'\n\nconst SearchStyled = styled.div`\n    \n    margin: 0 10px;\n    flex: 50% 0 0;\n    margin-right: auto;\n\n    form {\n        position: relative;\n        height: 40px;\n\n        input {\n            height: 100%;\n            padding: 5px 10px;\n            width: 100%;\n            outline: none;\n            border: none;\n            border-bottom: 1px solid grey;\n        }\n\n        button {\n            background-color: #2c3e4e;\n            width: 35px;\n            height: 80%;\n            position: absolute;\n            top: 0;\n            right: 0;\n            border-radius: 5px;\n\n            img {\n                max-width: 100%;\n                width: 15px;\n            }\n        }\n    }\n    @media screen and (max-width: 875px) {\n        flex-wrap: wrap;\n        margin: 0;\n        flex: 100% 0 0;\n        margin-top: 15px;\n    }\n`\n\nconst ExtraMenuStyled = styled.div`\n    position: absolute;\n    bottom: -90px;\n    left: 50%;\n    transform: translateX(-50%);\n    width: 100%;\n    background-color: white;\n    padding: 15px 20px;\n    z-index: 9;\n    border-bottom-right-radius: 7px;\n    border-bottom-left-radius: 7px;\n    box-shadow: 8px 8px 20px 0px rgba(0, 0, 0, 0.33);\n    max-width: 500px;\n    \n\n    .info {\n        margin-bottom: 10px;\n    }\n    .options {\n\n        display: flex;\n        justify-content: center;\n\n        .option {\n            list-style: none;\n            display: flex;\n            cursor: pointer;\n            white-space: nowrap;\n            background: blue;\n            padding: 3px 5px;\n            min-width: 100px;\n            border: 2px solid #2c3e4e;\n            background: #2c3e4e;\n            color: white;\n            justify-content: center;\n\n            &.active {\n                background: white;\n                color: #2c3e4e;\n            }\n\n            input {\n                margin-right: 15px;\n            }\n        }\n    }\n`\n\nconst ExtraMenu = ({open, setOpen, searchOption, setSearchOption}) => {\n\n    const node = useRef();\n\n    const searchOptions = [\n        {name: 'Фамилии', value: 'surname'},\n        {name: 'VIN', value: 'vin'},\n        {name: 'Номеру карты', value: 'cardNumber'},\n    ]\n\n    const handleClickOutside = e => {\n        console.log(\"clicking anywhere\");\n        if (node.current.contains(e.target)) {\n          // inside click\n          return;\n        }\n        // outside click\n        setOpen(false)\n    }\n\n    useEffect(() => {\n        if (open) {\n          document.addEventListener(\"mousedown\", handleClickOutside)\n        } else {\n          document.removeEventListener(\"mousedown\", handleClickOutside)\n        }\n    \n        return () => {\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n        }\n    }, [open])\n    \n    if(open) {\n        return (\n            <ExtraMenuStyled ref={node}>\n                <p className=\"info\">Искать по: </p>\n                <div className=\"options\">\n                    {searchOptions.map(option => (\n                        <div key={option.value} className={`option ${searchOption === option.value ? 'active' : ''}`} onClick={(e) => setSearchOption(option.value)}>{option.name}</div>\n                    ))}\n                </div>\n            </ExtraMenuStyled>\n        )\n    } else {\n        return null\n    }\n\n\n}\n\n\nconst Search = (props) => {\n\n    const [ menuActive, setMenuActive ] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n    }\n\n    return (\n        <SearchStyled>\n            <form onSubmit={onSubmit} onClick={() => setMenuActive(true)} onFocus={() => setMenuActive(true)}>\n                <input value={props.searchValue} onChange={(e) => props.setSearchValue(e.target.value)} placeholder=\"Поиск\" className=\"search_field\"/>\n                <button>{props.searchLoading ? (<Loader type=\"Puff\" color=\"#fff\" height={15} width={15}/>) : (<img alt=\"Поиск\" src={searchIcon}/>)}</button>\n                <ExtraMenu searchOption={props.searchOption} setSearchOption={props.setSearchOption} open={menuActive} setOpen={setMenuActive}/>\n            </form>\n        </SearchStyled>\n    )\n}\n\n\nexport default Search","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Link, withRouter } from 'react-router-dom'\n\nimport nextIcon from './icons/next.svg'\n\n\nconst PaginatorStyled = styled.div`\n    display: flex;\n    justify-content: flex-end;\n\n    button {\n\n        display: flex;\n        font-size: .9em;\n        align-items: center;\n        background: transparent;\n        width: 25px;\n        height: 25px;\n        border: 1px solid #2c3e4e;\n        justify-content: center;\n        transition: all .2s;\n\n        &:hover {\n            transform: scale(1.05);\n        }\n        \n        img {\n            max-width: 100%;\n            width: 13px;\n            transition: all .2s;\n\n\n\n            &.goBack {\n                transform-origin: 50% 50%;\n                transform: rotate(180deg);\n            }\n        }\n    }\n\n    .page {\n        font-weight: bold;\n        font-size: 1em;\n        background-color: black;\n        color: white;\n        border-radius: 50%;\n        width: 30px;\n        height: 30px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        padding: 3px;\n        margin: 6px 10px;\n    }\n`\n\nconst Paginator = ({page, setPage, history, loading, totalPages}) => {\n\n    useEffect(() => {\n        if(+page > totalPages) {\n            setPage(1)\n        } else if(page <= 0) {\n            setPage(1)\n        } \n    }, [])\n\n    const goBack = () => {\n        if(+page !== 1) {\n            setPage(+page-1)\n        }\n    }\n\n    const goForward = () => {\n        if(totalPages > +page) {\n            setPage(+page+1)\n        }\n    }\n\n    return (\n        <PaginatorStyled>\n            <button disabled={loading === null ? true : false} onClick={goBack}><img className=\"goBack\" src={nextIcon}/></button>\n            <button disabled={loading === null ? true : false} onClick={goForward}><img src={nextIcon}/></button>        \n        </PaginatorStyled>\n    )\n}\n\nexport default withRouter(Paginator)","import React from 'react'\nimport styled from 'styled-components'\n\nconst ShowAmountStyled = styled.div`\n    span {\n        margin-right: 5px;\n    }\n    font-size: .85em;   \n`\n\nconst ShowAmount = (props) => {\n\n    const limitOptins = [5, 10, 15, 20, 30]\n\n    const changeAmount = (e) => {\n        props.setLimit(e.target.value)\n    }\n\n    return (\n        <ShowAmountStyled>\n            <span>Показывать: </span>\n            <select value={props.limit} onChange={changeAmount}>\n                {limitOptins.map(option => (\n                <option value={option} key={option}>\n                    {option}\n                </option>))}\n            </select>\n        </ShowAmountStyled>\n    )\n}\n\nexport default ShowAmount","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useHistory } from 'react-router-dom'\n\nimport Filters from './Filters'\nimport Search from './Search'\nimport Paginator from './Paginator'\nimport ShowAmount from './ShowAmount'\n\n//import addIcon from './icons/add.svg'\n\nimport ButtonModern from '../../../elements/ButtonModern'\n\nconst InnerBarStyled = styled.div`\n    padding: 20px 10px;\n    display: flex;\n    align-items: center;\n\n    .page-info {\n        font-size: .9em;\n        margin: 0 15px;\n    }\n\n    .toggle {\n        display: flex;\n        margin-left: 20px;\n        margin-right: auto;\n\n        button {\n            \n            &:first-child {\n                border-bottom-right-radius: 0px;\n                border-top-right-radius: 0px;\n            }\n\n            &:nth-child(2) {\n                border-radius: 0;\n                border-left: none;\n            }\n\n            &:last-child {\n                border-left: 0;\n                border-bottom-left-radius: 0px;\n                border-top-left-radius: 0px;\n            }\n        }\n    }\n\n    @media screen and (max-width: 875px) {\n        flex-wrap: wrap;\n    }\n\n    @media screen and (max-width: 460px) {\n        .toggle {\n            flex: 100% 0 0;\n            margin-top: 15px;\n        }\n    }\n    \n`\n\nconst InnerBar = (props) => {\n\n    let history = useHistory()\n\n    const addDispatcher = () => {\n        history.push('/panel/cards/add_card')\n    }\n\n    return (\n        <InnerBarStyled>\n            <ButtonModern onClick={addDispatcher}>Добавить</ButtonModern>\n            <div className=\"toggle\">\n                <ButtonModern invert={ props.type === 'all' ? true : false }  onClick={() => props.setType('all')} >Все</ButtonModern>\n                <ButtonModern invert={ props.type === 'active' ? true : false } onClick={() => props.setType('active')} >Активные</ButtonModern>\n                <ButtonModern invert={ props.type === 'inactive' ? true : false }  onClick={() => props.setType('inactive')} >Неактивные</ButtonModern>\n            </div>\n\n            <Search searchLoading={props.searchLoading} searchOption={props.searchOption} setSearchOption={props.setSearchOption} searchValue={props.searchValue} setSearchValue={props.setSearchValue}/>\n\n            {/* <Filters/> */}\n            {/* <ShowAmount limit={props.limit} setLimit={props.setLimit}/>\n            <div className=\"page-info\">\n                Стр. {props.page} из {props.totalPages === 0 ? '?' : props.totalPages}\n            </div>\n            <Paginator totalPages={props.totalPages} loading={props.dispatchers} page={props.page} setPage={props.setPage}/> */}\n\n        </InnerBarStyled>\n    )\n}\n\nexport default InnerBar","import React, { useEffect } from 'react'\nimport { Link, Route, Switch} from 'react-router-dom'\nimport styled from 'styled-components'\nimport StatusSelect from './StatusSelect'\nimport { getAllCards, getInactiveCards, getActiveCards, searchByLastName, searchByVIN, searchByCardNumber } from \"../../services/cardsService\"\nimport Loader from './Loader'\nimport { useLocation } from 'react-router-dom'\nimport ViewCard from './ViewCard/ViewCard'\nimport { useQueryState } from \"react-router-use-location-state\"\nimport ActivateCard from './ActivateCard/ActivateCard'\nimport AddCard from './AddCard/AddCard'\n\nimport Card from '../../elements/Card'\nimport InnerBar from './InnerBar/InnerBar'\n\nconst CardCustom = styled(Card)`\n    padding: 10px 0;\n`\n\nconst CardsStyled = styled.div`\n    table {\n        border-collapse: collapse;\n        width: 100%;\n        overflow: scroll;\n        .center {\n            text-align: center;\n        }\n        thead {\n            th {\n                text-align: center;\n                padding: 10px 5px;\n            }\n        }\n        \n        .row_data {\n            td {\n                padding: 10px 10px;\n                font-size: .9em;\n                text-align: center;\n                &.status {\n                    position: relative;\n                }\n\n                span {\n                    text-align: left;\n                }\n            }\n            &:nth-child(2n) {\n                background-color: #ececec;\n            }\n        }\n    }\n`\n\n\nconst statusOptions = [\n    { value: 0, label: 'Активна'},\n    { value: 1, label: 'Деактивирована'}\n]\n\nconst Cards = (props) => {\n    \n    let location = useLocation();\n\n    const [ totalPages, setTotalPages ] = React.useState(0)\n\n\n    useEffect(() => {\n        getAllCards()\n        .then(res => {\n            setCards(res)\n            setTotalPages(+res.pages)\n        })\n        .catch(err => {\n            console.error(err)\n        })\n    }, [])\n\n    const [ cards, setCards ] = React.useState(null)\n    \n    console.log(cards)\n\n    const [ page, setPage ] = useQueryState('page', 1)\n    const [ limit, setLimit ] = useQueryState('limit', 10)\n\n    const [ type, setType ] = useQueryState('type', 'all')\n    const [ searchValue, setSearchValue ] = useQueryState('search', '')\n    const [ searchOption, setSearchOption ] = useQueryState('searchOption', 'surname')\n\n    useEffect(() => {\n\n        setCards(null)\n        setSearchValue('')\n\n        if(type === 'all') {\n            getAllCards()\n            .then(res => {\n                setCards(res)\n            })\n            .catch(err => {\n                console.error(err)\n            })\n    \n        } else if(type === 'inactive') {\n\n            getInactiveCards()\n            .then(res => {\n                setCards(res)\n            })\n            .catch(err => {\n                console.error(err)\n            })\n        } else if(type === 'active') {\n            getActiveCards()\n            .then(res => {\n                setCards(res)\n            })\n            .catch(err => {\n                console.error(err)\n            })\n        }\n\n    }, [type])\n\n    const [ searchLoading, setSearchLoading ] = React.useState(false)\n\n    useEffect(() => {\n\n        setSearchLoading(true)\n        setType('all')\n\n        if(searchOption === 'surname') {\n            searchByLastName(searchValue)\n            .then(res => {\n                setCards(res)\n                setSearchLoading(false)\n            })\n            .catch(err => {\n                console.error(err)\n            })    \n            \n        } else if(searchOption === 'vin') {\n            searchByVIN(searchValue)\n            .then(res => {\n                setCards(res)\n                setSearchLoading(false)\n            })\n            .catch(err => {\n                console.error(err)\n            })    \n            \n        } else if(searchOption === 'cardNumber') {\n            searchByCardNumber(searchValue)\n            .then(res => {\n                setCards(res)\n                setSearchLoading(false)\n            })\n            .catch(err => {\n                console.error(err)\n            })    \n            \n        }\n    }, [searchOption, searchValue])\n\n\n        return (\n            <CardsStyled >\n                <CardCustom style={!cards ?  { minHeight: '80vh' }  : null}>\n                <InnerBar searchLoading={searchLoading} searchOption={searchOption} setSearchOption={setSearchOption} searchValue={searchValue} setSearchValue={setSearchValue} type={type} setType={setType} limit={limit} setLimit={setLimit} totalPages={totalPages} loading={cards} page={page} setPage={setPage}/>\n            {cards ? (\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Номер</th>\n                                <th>Пакет услуг</th>\n                                <th className=\"center\">Статус</th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {cards.map(card => (\n                               <tr className=\"row_data\" key={card.id}>\n                                    <td> <Link to={`/panel/cards/${card.id}`}>{card.cardNumber}</Link></td>\n                                    <td>{card.servicesId}</td>\n                                    <td className=\"status\">\n                                        <StatusSelect id={card.id} status={card.cardStatus}></StatusSelect>\n                                    </td>    \n                                </tr>\n                            ))}\n                        </tbody>\n                </table> ) :  <Loader/>}\n\n                </CardCustom>\n\n\n               <Switch>\n                    <Route exact path=\"/panel/cards/add_card\" render={() => <AddCard />}/>\n                    <Route exact path={`/panel/cards/:id`} render={({match}) => <ViewCard id={match.params.id}/>}/>\n                </Switch> \n\n              \n            </CardsStyled>\n        )\n}\n\n\n\nexport default Cards","import axios from \"axios\"\n\n\n//const baseUrl = '/api/cards'\nconst baseUrl = 'https://cors-anywhere.herokuapp.com/https://kadet-assistance.herokuapp.com/api/Orders'\n \nexport const getAllOrders = async () => {\n    const res = await axios.get(`${baseUrl}/GetOrders`)\n    return res.data\n}\n\nexport const addOrder = async (data) => {\n    const res = await axios.post(`${baseUrl}/PostOrder`, data)\n    return res.data\n}\n","import React from 'react'\nimport ContentLoader from 'react-content-loader'\n\n\nconst rowNumbers = [...Array(20).keys()]\n\nconst Loader = props => (\n\n    \n    <ContentLoader \n        speed={2}\n        width=\"100%\"\n        height=\"70vh\"\n        backgroundColor=\"#f3f3f3\"\n        foregroundColor=\"#ecebeb\"\n    >\n\n        {rowNumbers.map(i => (\n            <rect key={i} x=\"0px\" y={`${(i+1) * 45 - 50}px`} rx=\"0\" ry=\"0\" width=\"100%\" height=\"35\" /> \n        ))}\n\n\n\n  </ContentLoader>\n)\n\n\nexport default Loader","import React from 'react'\nimport styled from 'styled-components'\n\nconst ViewOrder = () => {\n\n    return (\n        <div>View Order</div>\n    )\n}\n\nexport default ViewOrder","import styled from 'styled-components'\nimport {  Field, Form } from 'formik'\nimport ButtonModern from '../../../elements/ButtonModern'\n\nexport const FormStyled  = styled(Form)`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n`\n\nexport const SubmitButton = styled(ButtonModern)`\n\n`\n\nexport const AddOrderStyled = styled.div`\n    position: fixed;\n    overflow: scroll;\n    top: 0px;\n    width: 500px;\n    height: 40px;\n    left: 0;\n    background: rgba(0, 0, 0, .5);\n    z-index: 99;\n    padding: 40px 20px;\n    height: 100vh;\n    width: 100%;\n    display: flex;\n\n    div.content {\n        width: 100%;\n        max-width: 650px;\n        margin: auto;\n        padding: 40px 30px;\n        background-color: #e7e7e7;\n        border-radius: 10px;\n        position: relative;\n        padding-top: 70px;\n    }\n\n    .card_title {\n        background-color: #2c3e4e;\n        padding: 15px;\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        display: flex;\n        align-items: center;\n\n        span {\n            font-weight: bold;\n            color: white;\n            font-size: 1em;\n            margin-right: auto;\n        }\n\n        img {\n            max-width: 40px;\n            width: 25px;\n            cursor: pointer;\n        }\n    }\n\n\n`\nexport const Input = styled(Field)`\n    outline: none;\n    width: 100%;\n    border: none;\n    padding: 8px 10px;\n    border-radius: 5px;\n    outline: none;\n    font-size: .95em;\n    width: 100%;\n`\nexport const TwoInLine = styled.div`\n\n    display: flex;\n    margin-bottom: 20px;\n\n    *:first-child {\n        flex: 45% 0 0;\n        margin-right: 10%;\n    }\n\n    *:last-child {\n        flex: 45% 0 0;\n\n    }\n\n    @media screen and (max-width: 550px) {\n\n        flex-wrap: wrap;\n        margin-bottom: 0;\n\n        *:first-child {\n            flex: 100% 0 0;\n            margin-right: 0;\n            margin-bottom: 20px;\n        }\n\n        *:last-child {\n            flex: 100% 0 0;\n        }\n    }\n`\n\nexport const FieldGroup = styled.div`\n    position: relative;\n    margin: 20px 0;\n    width: 100%;\n\n    label {\n        position: absolute;\n        top: -20px;\n        font-size: .85em;\n        left: 0;\n    }\n`\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useHistory } from 'react-router-dom'\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\nimport Button from '../../../elements/Button'\nimport { connect } from 'react-redux'\nimport { notify, clearNotifications } from '../../../reducers/notifications'\nimport Loader from 'react-loader-spinner'\nimport closeIcon from '../../../assets/imgs/close_icon.svg'\nimport { addOrder } from '../../../services/ordersService'\n\nimport { AddOrderStyled, Input, TwoInLine, FormStyled, FieldGroup, SubmitButton } from './AddOrderStyled'\n\n\nconst AddOrder = ({notify, clearNotifications}) => {\n\n    let history = useHistory()\n\n    const closeUserInfo = (e) => {\n        e.stopPropagation()\n        history.push('/panel/orders')\n    }\n\n    const confirmation = (e) => {\n        clearNotifications()\n        notify({\n            heading: 'Вы уверены?',\n            text: 'Данные будут сброшены',\n            type: 'submit',\n            onOkFunc: () => closeUserInfo(e)\n        })\n    }\n\n    const [ loading, setLoading ] = useState(false)\n\n    const onSubmit = (values) => {\n        console.log(values)\n\n        setLoading(true)\n        addOrder(values)\n        .then(res => {\n            setLoading(false)\n            notify({\n                type: 'success',\n                time: 2000,\n                heading: 'Активация успешна',\n                text: 'Карта активирована'\n            })\n        })\n        .catch(err => {\n            setLoading(false)\n            notify({\n                type: 'error',\n                time: 2000,\n                heading: 'Что-то пошло не так'\n            })\n        })\n    }\n\n    const initialValues = {\n        ClientId: 0,\n        TechnicalAssistanceCardNumber: '',\n        Location: '',\n        PointOfDeparture: '',\n        PointOfDestination: '',\n        ServiceId: 0,\n        ServicesCostForClient: 0,\n        CountryId: 0,\n        ServicesCostForContractor: 0,\n        ServiceTime: '',\n        PaymentMethodId: 0,\n        ServiceRating: 0,\n        OperatorComment: '',\n        ClientReview: ''\n    }\n\n    return (\n        <AddOrderStyled>\n            <div className=\"content\" onClick={(e) => e.stopPropagation()}>\n                <div className=\"card_title\"><span>Добавить новый заказ: </span><img onClick={confirmation} src={closeIcon}/></div>\n                <Formik initialValues={initialValues} onSubmit={onSubmit}>\n                    <FormStyled>\n\n                        <TwoInLine>\n                            <FieldGroup>\n                                <label>Точка отправки</label>\n                                <Input name=\"PointOfDeparture\" type=\"text\" placeholder=\"Точка отправки\"/>\n                            </FieldGroup>\n                            <FieldGroup>\n                                <label>Конечный адрес</label>\n                                <Input name=\"PointOfDestination\" type=\"text\" placeholder=\"Конечный адрес\"/>\n                            </FieldGroup>\n                        </TwoInLine>\n\n                        <FieldGroup>\n                            <label>Номер карты</label>\n                            <Input name=\"TechnicalAssistanceCardNumber\" type=\"number\" placeholder=\"Номер карты\"/>\n                        </FieldGroup>\n\n                        <FieldGroup>\n                            <label>Локация</label>\n                            <Input name=\"Location\" type=\"text\" placeholder=\"Локация\"/>\n                        </FieldGroup>\n\n\n                        <TwoInLine>\n                            <FieldGroup>\n                                <label>Цена для подрятчика</label>\n                                <Input name=\"ServicesCostForContractor\" type=\"number\" placeholder=\"Цена для подрятчика\"/>\n                            </FieldGroup>\n                            <FieldGroup>\n                                <label>Цена для клиента</label>\n                                <Input name=\"ServicesCostForClient\" type=\"number\" placeholder=\"Цена для клиента\"/>\n                            </FieldGroup>\n                        </TwoInLine>\n\n                        <TwoInLine>\n                            <FieldGroup>\n                                <label>Отзыв клиента</label>\n                                <Input name=\"ClientReview\" type=\"text\" placeholder=\"Отзыв клиента\"/>\n                            </FieldGroup>\n                            <FieldGroup>\n                                <label>Оценка клиента</label>\n                                <Input name=\"ServiceRating\" max=\"10\" type=\"number\" placeholder=\"Оценка клиента\"/>\n                            </FieldGroup>\n                        </TwoInLine>\n\n                        <FieldGroup>\n                            <label>Комментарий оператора</label>\n                            <Input name=\"OperatorComment\" max=\"10\" type=\"text\" placeholder=\"Комментарий оператора\"/>\n                        </FieldGroup>\n\n                        <SubmitButton invert type=\"submit\">{loading ? <Loader type=\"Puff\" color=\"#fff\" height={15} width={15}/> : \"Добавить заказ\"}</SubmitButton>\n                    </FormStyled>\n                </Formik>\n            </div>\n        </AddOrderStyled>\n    )\n}\n\nexport default connect(null, { notify, clearNotifications })(AddOrder)","import React, { useState, useEffect, useRef } from 'react'\nimport styled from 'styled-components'\nimport { getPositions } from '../../../services/misc/roles'\n\n\nimport filterIcon from './icons/filter.svg'\n\nconst FiltersDtyled = styled.div`\n    flex: 30% 0 0;\n    display: flex;\n    align-items: center;\n\n    .filter-icon {\n      display: flex;\n      justify-content: center;\n      align-content: center;\n      min-width: 20px;\n      width: 18px;\n      margin-right: 15px;\n      img {\n        width: 100%;\n      }\n    }\n\n    .filter_item {\n        display: flex;\n        align-items: center;\n        position: relative;\n        \n        &.status-filter {\n          margin-right: 20px;\n        }\n\n        span.info {\n            font-size: .7em;\n            position: absolute;\n            top: -50%;\n            left: 0;\n            \n        }\n    }\n`\n\nconst DropDownStyled = styled.div`\n  display: flex;\n  position: relative;\n\n  .dropdown-toggler {\n    background-color: #45a9db;\n    padding: 5px;\n    font-size: .9em;\n    border-radius: 5px;\n    color: white;\n    position: relative;\n    z-index: 9;\n    max-height: 27px;\n    height: 27px;\n  }\n\n  .dropdown-menu {\n    position: absolute;\n    left: 0;\n    top: 0;\n    background-color: #607d8b;\n    border-radius: 5px;\n    z-index: 99;\n\n    .dropdown-menu-item {\n      list-style: none;\n      font-size: .9em;\n      text-align: center;\n      padding: 5px 10px;\n      cursor: pointer;\n      color: white;\n    }\n  }\n`\n\n\nconst Dropdown = ({ value, options, onChange }) => {\n\n\n  const node = useRef()\n  const [open, setOpen] = useState(false)\n\n  const handleClickOutside = e => {\n    if (node.current.contains(e.target)) {\n      // inside click\n      return;\n    }\n    // outside click\n    setOpen(false)\n  }\n\n  const handleChange = selectedValue => {\n    onChange(selectedValue)\n    setOpen(false)\n  }\n\n\n  useEffect(() => {\n    if (open) {\n      document.addEventListener(\"mousedown\", handleClickOutside)\n    } else {\n      document.removeEventListener(\"mousedown\", handleClickOutside)\n    }\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    }\n  }, [open])\n\n\n  return (\n    <DropDownStyled ref={node} className=\"dropdown\">\n      <button className=\"dropdown-toggler\" onClick={e => setOpen(!open)}>\n        {value || 'Все'}\n      </button>\n      {open ? (\n        <ul className=\"dropdown-menu\">\n          {options.map(opt => (\n            <li key={opt} className=\"dropdown-menu-item\" onClick={e => handleChange(opt)}>\n              {opt}\n            </li>\n          ))}\n        </ul>\n      ) : null}\n    </DropDownStyled>\n  )\n}\n\nconst Filters = () => {\n\n    const [ statusFilter, setStatusFilter ] = useState('Любой')\n    const [ positionFilter, setPositionFilter ] = useState('Любая')\n\n    const statusFilters = [\"Любой\", \"Активыный\", 'Выходной', 'На больничном', 'В отпуске', 'Уволен']\n\n    const positionFilters = [\"Любая\", 'Диспетчер', 'Старший диспетчер', 'Служба контроля качества', 'Выделенный под проект']\n\n    return (\n        <FiltersDtyled>\n            <div className=\"filter-icon\"><img src={filterIcon} alt=\"Фильтр\"/></div>\n            <div className=\"filter_item status-filter\">\n                <span className=\"info\">Статус: </span>\n                <Dropdown value={statusFilter} options={statusFilters} onChange={(v) => setStatusFilter(v)}/>\n            </div>\n\n            <div className=\"filter_item\">\n                <span className=\"info\">Должность: </span>\n                <Dropdown value={positionFilter} options={positionFilters} onChange={(v) => setPositionFilter(v)}/>\n            </div>\n\n        </FiltersDtyled>\n    )\n}\n\n\nexport default Filters","import React, { useState, useEffect, useRef } from 'react'\nimport styled from 'styled-components'\nimport Loader from 'react-loader-spinner'\n\n\nimport searchIcon from './icons/search.svg'\n\nconst SearchStyled = styled.div`\n    \n    margin: 0 10px;\n    flex: 70% 0 1;\n    margin-right: auto;\n\n    form {\n        position: relative;\n        height: 40px;\n\n        input {\n            height: 100%;\n            padding: 5px 10px;\n            width: 100%;\n            outline: none;\n            border: none;\n            border-bottom: 1px solid grey;\n        }\n\n        button {\n            background-color: #2c3e4e;\n            width: 35px;\n            height: 80%;\n            position: absolute;\n            top: 0;\n            right: 0;\n            border-radius: 5px;\n\n            img {\n                max-width: 100%;\n                width: 15px;\n            }\n        }\n    }\n    @media screen and (max-width: 600px) {\n        flex-wrap: wrap;\n        margin: 0;\n        flex: 100% 0 0;\n        margin-top: 15px;\n    }\n`\n\nconst ExtraMenuStyled = styled.div`\n    position: absolute;\n    bottom: -90px;\n    left: 50%;\n    transform: translateX(-50%);\n    width: 100%;\n    background-color: white;\n    padding: 15px 20px;\n    z-index: 9;\n    border-bottom-right-radius: 7px;\n    border-bottom-left-radius: 7px;\n    box-shadow: 8px 8px 20px 0px rgba(0, 0, 0, 0.33);\n    max-width: 500px;\n    \n\n    .info {\n        margin-bottom: 10px;\n    }\n    .options {\n\n        display: flex;\n        justify-content: center;\n\n        .option {\n            list-style: none;\n            display: flex;\n            cursor: pointer;\n            white-space: nowrap;\n            background: blue;\n            padding: 3px 5px;\n            min-width: 100px;\n            border: 2px solid #2c3e4e;\n            background: #2c3e4e;\n            color: white;\n            justify-content: center;\n\n            &.active {\n                background: white;\n                color: #2c3e4e;\n            }\n\n            input {\n                margin-right: 15px;\n            }\n        }\n    }\n`\n\nconst ExtraMenu = ({open, setOpen, searchOption, setSearchOption}) => {\n\n    const node = useRef();\n\n    const searchOptions = [\n        {name: 'Фамилии', value: 'surname'},\n        {name: 'Стране', value: 'country'},\n        {name: 'Номеру заказа', value: 'orderNumber'},\n    ]\n\n    const handleClickOutside = e => {\n        console.log(\"clicking anywhere\");\n        if (node.current.contains(e.target)) {\n          // inside click\n          return;\n        }\n        // outside click\n        setOpen(false)\n    }\n\n    useEffect(() => {\n        if (open) {\n          document.addEventListener(\"mousedown\", handleClickOutside)\n        } else {\n          document.removeEventListener(\"mousedown\", handleClickOutside)\n        }\n    \n        return () => {\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n        }\n    }, [open])\n    \n    if(open) {\n        return (\n            <ExtraMenuStyled ref={node}>\n                <p className=\"info\">Искать по: </p>\n                <div className=\"options\">\n                    {searchOptions.map(option => (\n                        <div key={option.value} className={`option ${searchOption === option.value ? 'active' : ''}`} onClick={(e) => setSearchOption(option.value)}>{option.name}</div>\n                    ))}\n                </div>\n            </ExtraMenuStyled>\n        )\n    } else {\n        return null\n    }\n\n\n}\n\n\nconst Search = (props) => {\n\n    const [ menuActive, setMenuActive ] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n    }\n\n    return (\n        <SearchStyled>\n            <form onSubmit={onSubmit} onClick={() => setMenuActive(true)} onFocus={() => setMenuActive(true)}>\n                <input value={props.searchValue} onChange={(e) => props.setSearchValue(e.target.value)} placeholder=\"Поиск\" className=\"search_field\"/>\n                <button>{props.searchLoading ? (<Loader type=\"Puff\" color=\"#fff\" height={15} width={15}/>) : (<img alt=\"Поиск\" src={searchIcon}/>)}</button>\n                <ExtraMenu searchOption={props.searchOption} setSearchOption={props.setSearchOption} open={menuActive} setOpen={setMenuActive}/>\n            </form>\n        </SearchStyled>\n    )\n}\n\n\nexport default Search","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useHistory } from 'react-router-dom'\n\nimport Filters from './Filters'\nimport Search from './Search'\n\n//import addIcon from './icons/add.svg'\n\nimport ButtonModern from '../../../elements/ButtonModern'\n\nconst InnerBarStyled = styled.div`\n    padding: 20px 10px;\n    display: flex;\n    align-items: center;\n\n    .page-info {\n        font-size: .9em;\n        margin: 0 15px;\n    }\n\n    @media screen and (max-width: 600px) {\n        flex-wrap: wrap;\n        margin: 0;\n    }\n`\n\nconst InnerBar = (props) => {\n\n    let history = useHistory()\n\n    const addOrder = () => {\n        history.push('/panel/orders/add_order')\n    }\n\n    return (\n        <InnerBarStyled>\n            <ButtonModern style={{marginRight: 'auto'}} onClick={addOrder}>Добавить</ButtonModern>\n            <Search setSearchValue={props.setSearchValue} searchValue={props.searchValue} setSearchOption={props.setSearchOption} searchOption={props.searchOption}/>\n        </InnerBarStyled>\n    )\n}\n\nexport default InnerBar","import React, { useEffect } from 'react'\nimport { Link, Route, Switch} from 'react-router-dom'\nimport styled from 'styled-components'\n//import StatusSelect from './StatusSelect'\nimport { getAllOrders } from \"../../services/ordersService\"\nimport Loader from './Loader'\nimport { useLocation } from 'react-router-dom'\nimport ViewOrder from './ViewOrder/ViewOrder'\nimport { useQueryState } from \"react-router-use-location-state\"\n//import ActivateCard from './ActivateCard/ActivateCard'\nimport AddOrder from './AddOrder/AddOrder'\n\nimport Card from '../../elements/Card'\nimport InnerBar from './InnerBar/InnerBar'\n\nconst CardCustom = styled(Card)`\n    padding: 10px 0;\n`\n\nconst CardsStyled = styled.div`\n    table {\n        border-collapse: collapse;\n        width: 100%;\n        overflow: scroll;\n        .center {\n            text-align: center;\n        }\n        thead {\n            th {\n                text-align: center;\n                padding: 10px 5px;\n            }\n        }\n        \n        .row_data {\n            td {\n                padding: 10px 10px;\n                font-size: .9em;\n                text-align: center;\n                &.status {\n                    position: relative;\n                }\n\n                span {\n                    text-align: left;\n                }\n            }\n            &:nth-child(2n) {\n                background-color: #ececec;\n            }\n        }\n    }\n`\n\n\nconst statusOptions = [\n    { value: 1, label: 'Активна'},\n    { value: 0, label: 'Деактивирована'}\n]\n\nconst Orders = (props) => {\n    \n    let location = useLocation();\n\n\n    const [ orders, setOrders ] = React.useState(null)\n    console.log(orders)\n\n    useEffect(() => {\n        getAllOrders()\n        .then(res => {\n            setOrders(res)\n        })\n        .catch(err => {\n            console.log(err)\n        })\n    }, [])\n\n\n    const [ searchOption, setSearchOption ] = useQueryState('searchOption', 'surname')\n    const [ searchValue, setSearchValue ] = useQueryState('searchValue', '')\n\n    useEffect(() => {\n\n    }, [searchOption, searchValue])\n\n        return (\n            <CardsStyled >\n                <CardCustom style={!orders ?  { minHeight: '80vh' }  : null}>\n                <InnerBar searchValue={searchValue} setSearchValue={setSearchValue} setSearchOption={setSearchOption} searchOption={searchOption} loading={orders}/>\n            {orders ? (\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Номер</th>\n                                <th>Клиент</th>\n                                <th className=\"center\">Стоимость  услуги клиенту</th>\n                                <th className=\"center\">Дата создания</th>\n                                <th>Рейтинг</th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {orders.map(order => (\n                               <tr className=\"row_data\" key={order.id}>\n                                    <td> <Link to={`/panel/orders/${order.id}`}>{order.number}</Link></td>\n                                    <td>{order.client}</td>\n                                    <td>{order.price}</td>\n                                    <td>{order.dateCreated}</td>\n                                    <td>{order.rating}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                </table> ) :  <Loader/>}\n\n                </CardCustom>\n\n\n               <Switch>\n                    <Route exact path=\"/panel/orders/add_order\" render={() => <AddOrder />}/>\n                    <Route exact path={`/panel/orders/:id`} render={({match}) => <ViewOrder id={match.params.id}/>}/>\n                </Switch>  \n\n              \n            </CardsStyled>\n        )\n}\n\n\n\nexport default Orders","import React from \"react\"\nimport ContentLoader from \"react-content-loader\" \n\nconst Loader = () => (\n    <ContentLoader \n    speed={2}\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 500 231\"\n    backgroundColor=\"#f3f3f3\"\n    foregroundColor=\"#ecebeb\"\n    style={{textAlign: 'center'}}\n  >\n    <circle cx=\"256\" cy=\"52\" r=\"35\" /> \n    <rect x=\"177\" y=\"95\" rx=\"0\" ry=\"0\" width=\"168\" height=\"21\" /> \n    <rect x=\"132\" y=\"130\" rx=\"0\" ry=\"0\" width=\"250\" height=\"12\" /> \n    <rect x=\"131\" y=\"153\" rx=\"0\" ry=\"0\" width=\"250\" height=\"14\" /> \n    <rect x=\"132\" y=\"177\" rx=\"0\" ry=\"0\" width=\"250\" height=\"15\" /> \n    <rect x=\"194\" y=\"205\" rx=\"0\" ry=\"0\" width=\"128\" height=\"24\" />\n  </ContentLoader>\n)\n\nexport default Loader","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { notify } from '../../reducers/notifications'\nimport { logout } from '../../reducers/user'\nimport { getUserData } from '../../services/userService'\nimport Card from '../../elements/Card'\nimport ButtonModern from '../../elements/ButtonModern'\n\n\nimport avatarIcon from '../../components/TopPanel/avatar.svg'\nimport emailIcon from './icons/email.svg'\nimport checkIcon from './icons/check.svg'\nimport noIcon from './icons/no.svg'\n\nimport Loader from './Loader'\n\nconst ProfileStyled = styled.div`\n\n`\n\nconst CardStyled = styled(Card)`\n    border-top: 4px solid #2c3e4e;\n    max-width: 500px;\n    margin: 0 auto;\n\n    .content {\n\n        text-align: center;\n\n        \n        .avatar {\n            width: 60px;\n            height: 60px;\n            border: 2px solid #2c3e4e;\n            margin: 0 auto;\n            border-radius: 50%;\n            padding: 2px;\n            overflow: hidden;\n            img {\n                width: 100%;\n            }\n        }\n\n        .username {\n            margin-top: 10px;\n        }\n\n        .name {\n            margin-top: 10px;\n            margin-bottom: 10px;\n        }\n\n        .email {\n\n            display: flex;\n            justify-content: center;\n            margin-bottom: 10px;\n            align-content: center;\n\n            img {\n                width: 20px;\n                margin-right: 5px;\n            }\n        }\n\n        .adminStatus {\n\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            margin-bottom: 20px;\n\n            img {\n                width: 20px;\n                margin-left: 5px;\n            }\n        }\n    }\n`\n\n\nconst Profile = (props) => {\n\n    const [ user, setUser ] = useState(null)\n\n    let history = useHistory()\n\n    const logOut = () => {\n        props.logout()\n        history.push(\"/login\")\n    }\n\n    useEffect(() => {\n\n        let userFromLocal= JSON.parse(window.localStorage.getItem('user'))  \n    \n        getUserData(userFromLocal.id)\n        .then( res => {\n            console.log(res)\n            setUser(res)\n        })\n        .catch( err => {\n            console.error(err)\n        })\n    }, [])\n\n    return (\n        <ProfileStyled>\n            <CardStyled>\n                {user ? (\n                    <div className=\"content\">\n\n                        <div className=\"avatar\">\n                            <img src={avatarIcon} alt=\"Аватар\"/>\n                        </div>\n\n                        <h4 className=\"username\">{user.username}</h4>\n\n                        <div className=\"name\">\n                            <i>{user.name} {user.surname}</i>\n                        </div>\n\n                        <div className=\"email\">\n                            <img src={emailIcon}/> {user.email}\n                        </div>\n\n                        <div className=\"adminStatus\">\n                            Права администратора: {user.admin ? <img src={checkIcon}/> : <img src={noIcon}/>}\n                        </div>\n                        <ButtonModern onClick={logOut}>Выйти</ButtonModern>\n                    </div>\n                ) : <Loader/>}\n            </CardStyled>\n        </ProfileStyled>\n    )\n}\n\n\nexport default connect(null, {notify, logout})(Profile)","import React from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport userAvatar from './avatar.svg'\n\n\nconst TopPanelStyled = styled.div`\n    grid-area: toppanel;\n    padding: 10px 30px;\n    background-color: white;\n    display: flex;\n    align-items: center;\n    box-shadow: 2px -5px 6px 7px rgba(0,0,0,.4);\n    z-index: 1;\n\n    h3 {\n        margin-right: auto;\n    }\n`\n\nconst User = styled(Link)`\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n\n    .avatar {\n        border: 1px solid black;\n        width: 35px;\n        height: 35px;\n        margin-left: 10px;\n        border-radius: 50%;\n        padding: 2px;\n        overflow: hidden;\n    }\n\n    img {\n        width: 100%;\n\n    }\n`\n\nconst TopPanel = (props) => {\n\n    return (\n        <TopPanelStyled>\n            <h3>Панель</h3>\n            <User to=\"/panel/profile\">\n                <b>{props.user ? props.user.username : null}</b>\n                <div className=\"avatar\">\n                    <img alt=\"Аватар пользователя\" src={userAvatar}/>\n                </div>\n            </User>\n        </TopPanelStyled>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user\n    }\n}\n\n\nexport default connect(mapStateToProps, null)(TopPanel)","import React from 'react'\nimport styled from 'styled-components'\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom'\nimport SideNav from '../SideNav/SideNav'\nimport { connect } from 'react-redux'\n\n\nimport Dashboard from '../../pages/Dashboard/Dashboard'\nimport Dispatchers from '../../pages/Dispatchers/Dispatchers'\n\nimport Cards from '../../pages/Cards/Cards'\nimport Orders from '../../pages/Orders/Orders'\nimport Profile from '../../pages/Profile/Profile'\nimport ActivateCard from '../../pages/Cards/ActivateCard/ActivateCard'\n\nimport TopPanel from '../../components/TopPanel/TopPanel'\n\nconst MainFrameStyled = styled.div`\n    height: 100vh;\n    max-height: 100vh;\n    overflow: hidden;\n    display: grid;\n    grid-template-areas:\n    \"nav toppanel toppanel\"\n    \"nav content content\"\n    \"nav content content\";\n    grid-template-rows: 60px 1fr;\n    grid-template-columns: auto 1fr;\n    grid-gap: 0px;\n\n    .contentMain {\n        grid-area: content;\n        padding: 20px;\n        overflow: scroll;\n        background-color: #e7e7e7;\n    }\n`\n\n\nconst MainFrame = () => {\n\n    return (\n        <MainFrameStyled>\n            <SideNav/>\n            <TopPanel/>\n\n                <div className=\"contentMain\">\n\n                    <Switch>\n                        <Route exact path=\"/panel/dashboard\" component={Dashboard}/>\n                        {JSON.parse(window.localStorage.getItem('user')).admin ? (<Route path=\"/panel/dispatchers\" component={Dispatchers}/>): null}\n                        \n\n                        <Route exact path=\"/panel/cards/activate/:id\" render={({match}) => <ActivateCard id={match.params.id}/>}/>\n                        <Route path=\"/panel/cards\" component={Cards}/> \n                        <Route path=\"/panel/orders\" component={Orders}/> \n                        <Route path=\"/panel/profile\" component={Profile}/> \n\n                        {/* {routes.map((route, index) => <Route key={index} exact path={route.path} render={() => route.component} />)}   */}\n\n                        <Route render={() => <h2>404 - Page not found!</h2>}/>\n                    </Switch>\n                </div>\n\n        </MainFrameStyled>\n    )\n}\n\n\nexport default MainFrame","import React, { useState, useEffect } from 'react'\nimport  { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { login, logout } from '../../reducers/user'\nimport { notify, clearNotifications } from '../../reducers/notifications'\n\nimport Loader from 'react-loader-spinner'\n\nimport loginPageBg from './loginBg.jpg'\nimport kadetLogo from '../../assets/imgs/logo_white.svg'\nimport waves from './waves.svg'\nimport waves2 from './waves2.svg'\n\nimport Button from '../../elements/Button'\n\nconst LoginPageStyled = styled.div`\n    display: flex;\n    min-height: 100vh;\n    background: url(${loginPageBg}) white;\n    background-size: cover;\n    padding: 20px 0;\n\n\n    .card-main {\n        margin: auto;\n        padding: 50px 20px;\n        border-radius: 10px;\n        box-shadow: 5px 7px 7px 0px rgba(0,0,0,.4);\n        width: 95%;\n        max-width: 500px;\n        color: white;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        background: url(${waves}), url(${waves2}), linear-gradient(to bottom, #536976, #292e49);\n        background-repeat: no-repeat;\n        background-position: 60% 330%, 60% 900%, 0 0;\n        background-size: 250%, 250%, 100% 100%;\n        transition: all .6s;\n\n        &.loaded {\n            background-position: 60% 120%, 60% 120%, 0 0;\n        }\n\n        .title {\n\n            display: flex;\n            align-items: center;\n            margin-bottom: 20px;\n\n            img {\n                width: 45px;\n                margin: 10px;\n                margin-left: auto;\n            }\n        }\n\n        form {\n            display: flex;\n            flex-direction: column;\n\n            input:last-child {\n                margin-bottom: 30px;\n                margin-top: 20px;\n            }\n\n            .forgot_password {\n                margin-bottom: 40px;\n                margin-top: 20px;\n                font-style: italic;\n                font-size: .9em;\n                text-decoration: underline;\n                color: white;\n                outline: none;\n            }\n        }\n\n    }\n`\n\nconst Input = styled.input`\n    display: inline-block;\n    border: none;\n    border-bottom: 1px solid white;\n    width: 100%;\n    padding: 10px 8px;\n    color: white;\n    font-size: .9em;\n    outline: none;\n    background: transparent;\n    margin: 10px 0;\n    margin-bottom: ${props => props.last ? '50px' : ''};\n    font-weight: bold;\n    padding-bottom: 9px;\n\n    &:focus {\n        border-bottom: 2px solid white;\n        padding-bottom: 8px;\n    }\n\n    &::placeholder {\n        color: #c8c8c8;\n    }\n\n`\n\nconst LoginPage = (props) => {\n\n    let history = useHistory()\n\n    const [ loaded, setLoaded ] = useState(false)\n    const [ loading, setLoading ] = useState(false)\n\n    useEffect(() => {\n        setTimeout(() => {\n            setLoaded(true)\n        }, 100)\n        props.logout()\n    }, [])\n\n\n\n    useEffect(() => {\n        props.clearNotifications()\n        props.notify({\n            heading: 'Заполнить данные?',\n            type: 'submit',\n            text: '(Только во время разработки)',\n            onOkFunc: fillData\n        });\n        return () => {\n            props.clearNotifications()\n        }\n    }, [])\n\n    const [ user, setUser ] = useState({\n        username: '',\n        password: ''\n    })\n\n    function fillData() {\n        setUser({\n            username: 'amurzaliev',\n            password: 'admin'\n        })\n\n        props.notify({\n            heading: 'Данные заполненны',\n            type: 'success',\n            text: '(Только во время разработки)',\n            time: 2000\n        });\n    }\n    const login = (e) => {\n        e.preventDefault()\n        setLoading(true)\n        props.login(user)\n        .then((res) => {\n            history.push(\"/panel/dashboard\")\n        })\n        .catch((err) => {\n            console.error(err)\n            setLoading(false)\n\n            props.clearNotifications()\n            props.notify({\n                heading: 'Ошибка авторизации',\n                type: 'error',\n                time: 2000\n            });\n\n        })\n\n      \n    }\n\n    return (\n        <LoginPageStyled>\n            <div className={`card-main ${loaded ? 'loaded' : ''}`}>\n\n                <div className=\"title\">\n                    <h3>Страница входа в систему</h3>\n                    <img src={kadetLogo} alt=\"Логотип\"/>\n                </div>\n\n                <form onSubmit={login}>\n                    <Input aria-label=\"Логин\" autoComplete=\"true\" onChange={(e) => setUser({...user, username: e.target.value})} value={user.username} required type=\"text\" placeholder=\"Логин\"/>\n                    <Input aria-label=\"Пароль\" autoComplete=\"current-password\" onChange={(e) => setUser({...user, password: e.target.value})}  value={user.password} required  type=\"password\" placeholder=\"Пароль\"/>\n                    <Link className=\"forgot_password\" to=\"/forgot_password\">Забыли пароль?</Link>\n                    <Button style={{height: '40px'}} disabled={loading ? true : false} color=\"black\" bgColor=\"white\" >{loading ? <Loader type=\"Puff\" color=\"#000\" height={18} width={18}/> : \"Войти\"}</Button>\n                </form>\n            </div>\n        </LoginPageStyled>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps, {login, logout, notify, clearNotifications})(LoginPage)\n\n\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { closeNotification } from '../../reducers/notifications'\nimport closeIcon from '../../assets/imgs/close_icon.svg'\n\nconst NotificationStyled = styled.div`\n\n    @keyframes flyIn{\n        0% {\n            transform: translateX(200%);\n        }\n\n        100% {\n            transform: translateX(0);\n        }\n    }\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    box-shadow: 7px 8px 13px 2px rgba(0, 0, 0, 0.35);\n    background-color: grey;\n    min-height: 75px;\n    height: auto;\n    color: white;\n    padding: 10px 20px;\n    border-radius: 10px;\n    width: 100%;\n    margin: 15px 0;\n    justify-content: center;\n    position: relative;\n    animation: flyIn .5s;\n\n        .content {\n            display: flex;\n            align-items: center;\n            flex-direction: column;\n        }\n\n        h3 {\n            font-size: 1em;\n            text-align: center;\n        }\n\n        p {\n            font-size: .9em;\n            margin-top: 1em;\n            text-align: center;\n        }\n\n        &.error {\n            background-color: #f44336;\n        }\n\n        &.info {\n            background-color: #607d8b;\n        }\n\n        &.submit {\n            background-color: #607d8b;\n            padding-right: 120px;\n\n            .content {\n                margin: auto;\n            }\n        }\n\n        &.success {\n            background-color: #4caf50;\n        }\n\n        .progressBar {\n            height: 7px;\n            background-color: rgba(0, 0, 0, .5);\n            position: absolute;\n            bottom: 0px;\n            left: 0;\n            border-bottom-left-radius: 10px;\n            border-bottom-right-radius: 10px;\n        }\n        \n        .close_btn {\n            position: absolute;\n            top: 5px; \n            right: 10px;\n            width: 15px;\n            height: 15px;\n            background: transparent;\n            border: 2px solid white;\n            border-radius: 50%;\n            padding: 10px;\n            box-sizing: content-box;\n\n\n            img {\n                max-width: 100%;\n            }\n        }\n\n        .submit_btns {\n            display: flex;\n            flex-direction: column;\n            position: absolute;\n            right: 0;\n            top: 0;\n            height: 100%;\n\n            button {\n                border: none;\n                padding: 10px;\n                background-color: grey;\n                font-size: .75em;\n                font-weight: bold;\n                width: 100px;\n                height: 50%;\n                &.continue {\n                    background-color: #4caf50;\n                    color: white;\n                    border-top-right-radius: 10px;\n                }\n\n                &.cancel {\n                    background-color: #da5148;\n                    color: white;\n                    border-bottom-right-radius: 10px;\n                }\n            }\n\n        }\n`\n\n\nconst Notification = ({notification, closeNotification}) => {\n    const [ width, setWidth ] = useState(100)\n\n\n    useEffect(() => {\n\n        if(notification.time) {\n            \n            const timer = setTimeout(() => {\n                setWidth(0)\n            }, 1000)\n    \n            const closeTimer = setTimeout(() => {\n                closeNotification(notification.id)\n            }, 1000 + notification.time)\n            \n    \n            return () => {\n                clearTimeout(timer)        \n                clearTimeout(closeTimer)\n            }\n        }\n\n    }, [])\n\n    if(notification.type === 'submit') {\n        return (\n            <NotificationStyled className={`notification ${notification.type}`}>\n                <div className=\"content\">\n                    <h3>{notification.heading}</h3>\n                    {notification.text ? <p>{notification.text}</p> : null}\n                </div>\n                <div className=\"submit_btns\">\n                    <button onClick={() => {notification.onOkFunc(); closeNotification(notification.id)}} className=\"continue\">Продолжить</button>\n                    <button onClick={() => closeNotification(notification.id)} className=\"cancel\">Отмена</button>\n                </div>\n                {notification.time ? <div className=\"progressBar\" style={{width: `${width}%`, transition: `all ${notification.time/1000}s linear`}}></div> : null}\n            </NotificationStyled>\n        )\n    } else {\n\n        return (\n            <NotificationStyled className={`notification ${notification.type}`}>\n                <div className=\"content\">\n                    <h3>{notification.heading}</h3>\n                    {notification.text ? <p>{notification.text}</p> : null}\n                </div>\n                <button onClick={() => closeNotification(notification.id)} className=\"close_btn\"><img src={closeIcon} alt=\"close\"/></button>\n                {notification.time ? <div className=\"progressBar\" style={{width: `${width}%`, transition: `all ${notification.time/1000}s linear`}}></div> : null}\n            </NotificationStyled>\n        )\n    }\n}\n\nexport default connect(null, { closeNotification })(Notification)","import React from 'react'\nimport styled from 'styled-components'\n\nimport Notification from './Noticiation'\n\nconst NotificationsStyled = styled.div`\n    z-index: 999;\n    position: fixed;\n    right: 5%;\n    bottom: 5%;\n    max-width: 90vw;\n    width: 350px;\n\n`\nconst Notifications = ({notifications}) => {\n\n    // types: error, info, success, submit\n    return (\n        <NotificationsStyled>\n            {notifications.map((item, index) => (\n                <Notification key={item.id} notification={item}/>\n            ))}\n        </NotificationsStyled>\n    )\n}\n\nexport default Notifications","// This is used to determine if a user is authenticated and\n// if they are allowed to visit the page they navigated to.\n\n// If they are: they proceed to the page\n// If not: they are redirected to the login page.\nimport React, { useEffect } from 'react'\nimport { Redirect, Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { logout } from '../reducers/user'\n\nconst PrivateRoute = ({ logout, user, component: Component, ...rest }) => {\n\n  // Add your own authentication on the below line.\n  let authenticated = JSON.parse(localStorage.getItem('user'))\n\n\n  return (\n    <Route {...rest}\n      render={props =>\n        authenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        )\n      }\n    />\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, {logout})(PrivateRoute)","import React, { useEffect } from 'react'\nimport GlobalStyles from './GlobalStyles' \nimport { BrowserRouter as Router, Route, Switch, Redirect, Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { initUser } from './reducers/user'\n\nimport MainFrame from './components/MainFrame/MainFrame'\nimport LoginPage from './pages/Login/LoginPage'\nimport Notifications from './components/Notifications/Notifications'\n\nimport PrivateRoute from './components/PrivateRoute'\n\n\nconst MainPage = (user) => {\n  return (\n    <div>\n      {user ? <Redirect to=\"/panel/dashboard\"/> : <Redirect to=\"/login\"/>}\n    </div>\n  )\n}\n\nconst App = (props) => {\n\n\n  useEffect(() => {\n    props.initUser()\n  }, [])\n  \n\n  return (\n    <div style={{position: 'relative'}} className=\"App\">\n      <GlobalStyles/>\n\n      <Notifications notifications={props.notifications}/>\n\n      <Router>\n        \n        <Switch>\n\n          <Route exact path=\"/\" component={() => <MainPage user={props.user}/>}/>\n          <PrivateRoute user={props.user} path=\"/panel/\" component={MainFrame}/>\n          <Route exact path=\"/login\" component={LoginPage}/>\n          <Route render={() => <h2>404 - Page not found!  <Link to=\"/panel\">Go to panel:</Link></h2>}/>\n          \n        </Switch>\n\n         \n      </Router>\n\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    notifications: state.notifications\n  }\n}\n\nexport default connect(mapStateToProps, {initUser})(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { getAllDispatchers } from \"../services/dispatcherService\"\n\nconst reducer = (state = null, action) => {\n    switch(action.type) {\n        case 'ALL_DISPATCHERS':\n            return action.data\n        default:\n            return state\n        \n    }\n}\n\nexport const getDispatchers = () => {\n    return async dispatch => {\n        const all_dispatchers = await getAllDispatchers()\n\n        dispatch({\n            type: 'ALL_DISPATCHERS',\n            data: all_dispatchers\n        })\n    }\n}\n\nexport default reducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\n\n\nimport userReducer from './reducers/user'\nimport notificationsReducer from './reducers/notifications'\nimport dispatcherReducer from './reducers/dispatchers'\n\nconst reduce_all = combineReducers({\n    user: userReducer,\n    notifications: notificationsReducer,\n    dispatchers: dispatcherReducer\n})\n\nconst store = createStore(reduce_all, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport LogRocket from 'logrocket'\nimport setupLogRocketReact from 'logrocket-react';\nLogRocket.init('cgbvt3/kadet')\nsetupLogRocketReact(LogRocket);\n\nconst render = () => {\n    ReactDOM.render(\n\n    <Provider store={store}>\n        <App />  \n    </Provider>\n    ,\n     document.getElementById('root'))\n}\n\n\nrender()\nstore.subscribe(render)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/close_icon.af3fb26e.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo_white.faebb83f.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.6b4930a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/next.a9239d43.svg\";","module.exports = __webpack_public_path__ + \"static/media/next.a9239d43.svg\";","module.exports = __webpack_public_path__ + \"static/media/dispatchers.80604fc4.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.d60e3e3e.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout.8fc6ae30.svg\";","module.exports = __webpack_public_path__ + \"static/media/collapse.c03add37.svg\";","module.exports = __webpack_public_path__ + \"static/media/orders.354d4359.svg\";","module.exports = __webpack_public_path__ + \"static/media/cards.f3c05eab.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashboard.0b3c26bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar_placeholder.44857d53.svg\";","module.exports = __webpack_public_path__ + \"static/media/email_icon.e6956db2.svg\";","module.exports = __webpack_public_path__ + \"static/media/phone_icon.581af562.svg\";","module.exports = __webpack_public_path__ + \"static/media/clock_icon.72373f7c.svg\";","module.exports = __webpack_public_path__ + \"static/media/docs_icon.8bdba33c.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.695359b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/password.3040424d.svg\";","module.exports = __webpack_public_path__ + \"static/media/email.e09b1d48.svg\";","module.exports = __webpack_public_path__ + \"static/media/phone.3b8f4d9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendar.097b68d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/filter.98e0f043.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.dea60a08.svg\";","module.exports = __webpack_public_path__ + \"static/media/ok.d6888d13.svg\";","module.exports = __webpack_public_path__ + \"static/media/error.94d6ea3a.svg\";","module.exports = __webpack_public_path__ + \"static/media/filter.98e0f043.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.dea60a08.svg\";","module.exports = __webpack_public_path__ + \"static/media/filter.98e0f043.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.dea60a08.svg\";","module.exports = __webpack_public_path__ + \"static/media/email.86d400ef.svg\";","module.exports = __webpack_public_path__ + \"static/media/check.d6888d13.svg\";","module.exports = __webpack_public_path__ + \"static/media/no.94d6ea3a.svg\";","module.exports = __webpack_public_path__ + \"static/media/loginBg.f68449b4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/waves.eea20e2d.svg\";","module.exports = __webpack_public_path__ + \"static/media/waves2.ce743cb2.svg\";"],"sourceRoot":""}