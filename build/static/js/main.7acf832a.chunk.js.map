{"version":3,"sources":["assets/imgs/logo.svg","components/SideNav/icons/dispatchers.svg","components/SideNav/icons/dealer_centers.svg","components/SideNav/icons/maps.svg","components/SideNav/icons/contractors.svg","components/SideNav/icons/orders.svg","components/SideNav/icons/reviews.svg","components/SideNav/icons/reports.svg","components/SideNav/icons/history.svg","components/SideNav/icons/settings.svg","components/SideNav/icons/logout.svg","GlobalStyles.js","utils/Auth.js","components/SideNav/SideNav.js","pages/dispatchers/Dispatchers.js","components/MainFrame/MainFrame.js","pages/Login/LoginPage.js","components/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GlobalStyles","createGlobalStyle","Auth","loggedIn","authenticate","cb","this","setTimeout","signout","isAuthenticated","SideNavSection","styled","nav","Logo","div","Logout","SideNav","history","useHistory","to","alt","src","logoIcon","dipatchers","dealer_centers","maps","contractors","orders","reviews","reports","historyIcon","settings","onClick","push","logoutIcon","Dispatchers","MainFrameStyled","DemoPage","name","routes","path","component","MainFrame","useState","id","content","notes","className","map","note","key","route","index","exact","render","LoginPage","PrivateRoute","Component","rest","props","pathname","state","from","location","MainPage","App","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7acf832a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.603d5388.svg\";","module.exports = __webpack_public_path__ + \"static/media/dispatchers.b4227c1e.svg\";","module.exports = __webpack_public_path__ + \"static/media/dealer_centers.c454b805.svg\";","module.exports = __webpack_public_path__ + \"static/media/maps.197c485d.svg\";","module.exports = __webpack_public_path__ + \"static/media/contractors.8f4f2217.svg\";","module.exports = __webpack_public_path__ + \"static/media/orders.3c2ea25c.svg\";","module.exports = __webpack_public_path__ + \"static/media/reviews.d67a5f72.svg\";","module.exports = __webpack_public_path__ + \"static/media/reports.473a3c99.svg\";","module.exports = __webpack_public_path__ + \"static/media/history.5f44fc68.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.5f699bc7.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout.9d6e7536.svg\";","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyles = createGlobalStyle`\n  * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n      -webkit-tap-highlight-color: rgba(0,0,0,0);\n  }\n  \n  body {\n    margin: 0;\n    padding: 0;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n      \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace;\n  }\n  input {\n    font-size: inherit;\n  }\n  img {\n    max-width: 100%;\n  }\n  button {\n    border: none;\n    cursor: pointer;\n    outline: none\n  }\n  a {\n    color: inherit;\n    text-decoration: none;\n    cursor: pointer;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`\n\nexport default GlobalStyles","const Auth = {\n    loggedIn: true,\n    authenticate(cb) {\n        this.loggedIn = true\n        setTimeout(cb, 100) // fake async\n    },\n    signout(cb) {\n        this.isAuthenticated = false;\n        setTimeout(cb, 100);\n    }\n}\nexport default Auth","import React from 'react'\nimport styled from 'styled-components'\nimport { NavLink, Link, useHistory } from 'react-router-dom'\n\nimport logoIcon from '../../assets/imgs/logo.svg'\n\nimport dipatchers from './icons/dispatchers.svg'\nimport dealer_centers from './icons/dealer_centers.svg'\nimport maps from './icons/maps.svg'\nimport contractors from './icons/contractors.svg'\nimport orders from './icons/orders.svg'\nimport reviews from './icons/reviews.svg'\nimport reports from './icons/reports.svg'\nimport historyIcon from './icons/history.svg'\nimport settings from './icons/settings.svg'\nimport logoutIcon from './icons/logout.svg'\n\nimport Auth from '../../utils/Auth'\n\n\n\nconst SideNavSection = styled.nav`\n    background-color: #2c3e4e;\n    height: 100vh;\n    display: inline-block;\n    grid-area: nav;\n    display: flex;\n    flex-direction: column;\n    overflow-y: scroll;\n\n    ul {\n        li {\n\n            list-style: none;\n            color: white;\n\n            a {\n                display: flex;\n                align-items: center;\n                text-decoration: none;\n                padding: 8px;\n                transition: all .2s;\n                font-weight: bold;\n                font-size: .9em;\n\n                &.active {\n                    background-color: #213240;\n                }\n\n                &:hover {\n                    background-color: #213240;\n                }\n\n                img {\n                    width: 35px;\n                    margin-right: 10px;\n                }\n            }\n\n        }\n    }\n\n`\n\nconst Logo = styled.div`\n\n    padding: 10px;\n    background-color: #1e2d3a;\n    img {\n        width: 70px;\n    }\n`\n\nconst Logout = styled.div`\n\n    margin-top: auto;\n    padding-bottom: 10px;\n    display: flex;\n    padding-left: 10px;\n\n\n    button {\n        padding: 8px;\n        border: none;\n        background-color: transparent;\n        color: white;\n        font-size: 1em;\n        font-weight: bold;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        img {\n            width: 40px;\n            margin-right: 10px;\n        }\n    }\n`\n\n\n\nconst SideNav = () => {\n\n    let history = useHistory()\n    \n    const logOut = () => {\n        Auth.signout(() => history.push(\"/login\"));\n    }\n\n\n    return (\n        <SideNavSection>\n            <Link to=\"/\"><Logo><img alt=\"Логотип\" src={logoIcon}/></Logo></Link>\n            <ul>\n                <li><NavLink to='/panel/dispatchers'><img alt='Диспетчеры' src={dipatchers}/>Диспетчеры</NavLink></li>\n                <li><NavLink to='/panel/dealer_centers'><img alt='Диспетчерские центры' src={dealer_centers}/>Диспетчерские центры</NavLink></li>\n                <li><NavLink to='/panel/maps'><img alt='Карты' src={maps}/>Карты</NavLink></li>\n                <li><NavLink to='/panel/contractors'><img alt='Подрятчики' src={contractors}/>Подрятчики</NavLink></li>\n                <li><NavLink to='/panel/orders'><img alt='Заказы' src={orders}/>Заказы</NavLink></li>\n                <li><NavLink to='/panel/reviews'><img alt='Отзывы' src={reviews}/>Отзывы</NavLink></li>\n                <li><NavLink to='/panel/reports'><img alt='Отчеты' src={reports}/>Отчеты</NavLink></li>\n                <li><NavLink to='/panel/history'><img alt='История' src={historyIcon}/>История</NavLink></li>\n                <li><NavLink to='/panel/settings'><img alt='Настройки' src={settings}/>Настройки</NavLink></li>\n            </ul>\n\n            <Logout>\n                <button onClick={logOut}>\n                    <img src={logoutIcon} alt=\"Выйти\"/>Выйти\n                </button>\n            </Logout>\n        </SideNavSection>\n    )\n}\n\nexport default SideNav","import React from 'react'\n\nconst Dispatchers = () => {\n\n    return (\n        <h1>Диспетчеры</h1>\n    )\n}\n\nexport default Dispatchers","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport SideNav from '../SideNav/SideNav'\n\nimport Dispatchers from '../../pages/dispatchers/Dispatchers'\n\n\n\nconst MainFrameStyled = styled.div`\n    height: 100vh;\n    max-height: 100vh;\n    overflow: hidden;\n    display: grid;\n    grid-template-areas:\n    \"nav content\";\n    grid-template-columns: 250px 1fr;\n    grid-gap: 0px;\n    .content {\n        grid-area: 'content';\n    }\n`\n\nconst DemoPage = ({name}) => <h1>{name}</h1>\n\n\nconst routes = [\n    {\n        path: '/panel/dispatchers',\n        component: <Dispatchers/>\n    },\n    {\n        path: '/panel/dealer_centers',\n        component: <DemoPage name={'Дилерские центры'}/>,\n    },\n    {\n        path: '/panel/maps',\n        component: <DemoPage name={'Карты'}/>\n    },\n    {\n        path: '/panel/contractors',\n        component: <DemoPage name={'Подрядчики'}/>\n    },\n    {\n        path: '/panel/orders',\n        component: <DemoPage name={'Заказы'}/>\n    },\n    {\n        path: '/panel/reviews',\n        component: <DemoPage name={'Отзывы'}/>\n    },\n    {\n        path: '/panel/reports',\n        component: <DemoPage name={'Отчеты'}/>\n    },\n    {\n        path: '/panel/history',\n        component: <DemoPage name={'История последних действий'}/>\n    },\n    {\n        path: '/panel/settings',\n        component: <DemoPage name={'Настройки'}/>\n    },\n\n]\n\n\nconst MainFrame = () => {\n\n\n    const [ notes, setNotes ] = useState([\n        {\n            id: 1,\n            content: 'Tralala'\n        },\n        {\n            id: 2,\n            content: 'Use effect'\n        },\n        {\n            id: 3,\n            content: 'Hahaha'\n        }\n    ])\n\n\n\n\n    return (\n        <MainFrameStyled>\n            <SideNav/>\n            <Redirect to=\"/panel/dispatchers\"/>\n\n                <div className=\"content\">\n\n                    {notes ? notes.map(note =>  <li key={note.id}>{note.content}</li>) : null}\n\n                    <Switch>\n                        {routes.map((route, index) => <Route key={index} exact path={route.path} render={() => route.component} />)}  \n\n                        <Route render={() => <h2>404 - Page not found!</h2>}/>\n                    </Switch>\n                </div>\n\n        </MainFrameStyled>\n    )\n}\n\nexport default MainFrame","import React from 'react'\nimport  { useHistory } from 'react-router-dom'\n\nimport Auth from '../../utils/Auth'\n\nconst LoginPage = () => {\n\n    let history = useHistory()\n\n    return (\n        <div>\n            <h1>This is a Login page</h1>\n            <button onClick={() => Auth.authenticate(() => history.push(\"/panel\"))}>Log in</button>\n        </div>\n    )\n}\n\nexport default LoginPage\n","// This is used to determine if a user is authenticated and\n// if they are allowed to visit the page they navigated to.\n\n// If they are: they proceed to the page\n// If not: they are redirected to the login page.\nimport React from 'react'\nimport Auth from '../utils/Auth'\nimport { Redirect, Route } from 'react-router-dom'\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n\n  // Add your own authentication on the below line.\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        Auth.loggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        )\n      }\n    />\n  )\n}\n\nexport default PrivateRoute","import React, { useState, useEffect } from 'react'\nimport GlobalStyles from './GlobalStyles' \nimport { BrowserRouter as Router, Route, Switch, Redirect, Link } from 'react-router-dom'\n\nimport MainFrame from './components/MainFrame/MainFrame'\nimport LoginPage from './pages/Login/LoginPage'\n\nimport PrivateRoute from './components/PrivateRoute'\nimport Auth from './utils/Auth'\n\n\nconst MainPage = () => {\n\n  return (\n    <div>\n      {Auth.loggedIn ? <Redirect to=\"/panel\"/> : <Redirect to=\"/login\"/>}\n    </div>\n  )\n}\n\n\nconst App = () => {\n\n  return (\n    <div className=\"App\">\n      <GlobalStyles/>\n\n      <Router>\n        \n        <Switch>\n\n          <Route exact path=\"/\" component={MainPage}/>\n          <PrivateRoute path=\"/panel/\" component={MainFrame}/>\n          <Route exact path=\"/login\" component={LoginPage}/>\n          <Route render={() => <h2>404 - Page not found!  <Link to=\"/panel\">Go to panel:</Link></h2>}/>\n          \n        </Switch>\n\n         \n      </Router>\n\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}